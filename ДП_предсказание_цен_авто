{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"ДП_предсказание_цен_авто","provenance":[],"authorship_tag":"ABX9TyO3fY3lBlm2ZKTpAM2LUcyF"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":24,"metadata":{"id":"nT48vBOWq3gU","executionInfo":{"status":"ok","timestamp":1656664618522,"user_tz":-180,"elapsed":6,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}}},"outputs":[],"source":["import numpy as np \n","import pandas as pd \n","\n","from tensorflow.keras.models import Sequential, Model  \n","from tensorflow.keras.layers import concatenate, Input, Dense, Dropout, BatchNormalization, Flatten \n","from tensorflow.keras import utils \n","from tensorflow.keras.optimizers import Adam\n","from sklearn import linear_model, ensemble\n"," \n","from sklearn.model_selection import train_test_split \n","from sklearn.preprocessing import LabelEncoder, StandardScaler \n","from sklearn import preprocessing\n","\n","from sklearn.metrics import mean_squared_error, r2_score \n","\n","import random  \n","from tensorflow.keras.utils import plot_model\n","import re \n","import matplotlib.pyplot as plt \n","%matplotlib inline"]},{"cell_type":"code","source":["from google.colab import drive \n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Slhgc-Z4rtHA","executionInfo":{"status":"ok","timestamp":1656663906710,"user_tz":-180,"elapsed":24312,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"1c28a6ea-0d75-47ac-c7a6-c7ef549f25eb"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"markdown","source":["# Загрузка и редактирование базы"],"metadata":{"id":"SvFAS-AV1BM-"}},{"cell_type":"code","source":["df = pd.read_csv('/content/drive/MyDrive/диплом/data_auto.csv')"],"metadata":{"id":"MHr9Glvkru_r","executionInfo":{"status":"ok","timestamp":1656663911181,"user_tz":-180,"elapsed":1477,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["df.head(20)"],"metadata":{"id":"I7dFQNdzt9nq","colab":{"base_uri":"https://localhost:8080/","height":676},"executionInfo":{"status":"ok","timestamp":1656437990365,"user_tz":-180,"elapsed":508,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"f2f3108a-2232-4233-826f-8e67ed3d608c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   марка модель поколение  мощность     год    пробег состояние  двери  \\\n","0   Audi     A4        B9       150  2017.0   89000.0  не битый    4.0   \n","1   Audi     Q5         I       170  2012.0  104000.0  не битый    5.0   \n","2   Audi     A8        D4       310  2014.0   41000.0     битый    4.0   \n","3   Audi     Q5         I       211  2010.0  113043.0  не битый    5.0   \n","4   Audi     A8        D2       174  1996.0  460000.0  не битый    4.0   \n","5   Audi     A6        C4       150  1995.0  325757.0  не битый    4.0   \n","6   Audi     A6        C7       180  2013.0   96341.0  не битый    4.0   \n","7   Audi     A6        C6       177  2006.0  180000.0  не битый    4.0   \n","8   Audi     A7         I       245  2015.0   58669.0  не битый    5.0   \n","9   Audi     80        B4        90  1994.0  200000.0  не битый    4.0   \n","10  Audi     A6        C4       150  1997.0  330000.0  не битый    5.0   \n","11  Audi     A4        B8       239  2008.0  220000.0  не битый    4.0   \n","12  Audi     Q3         I       170  2012.0  129000.0  не битый    5.0   \n","13  Audi     Q7        4M       249  2016.0  166812.0  не битый    5.0   \n","14  Audi     A3        8P       125  2011.0  183000.0  не битый    5.0   \n","15  Audi     Q3         I       170  2012.0  115000.0  не битый    5.0   \n","16  Audi     A7         I       204  2010.0  140000.0  не битый    5.0   \n","17  Audi     A4        B6       130  2004.0  300000.0  не битый    5.0   \n","18  Audi     A6        C5       150  2000.0  269312.0  не битый    4.0   \n","19  Audi     A6        C5       125  1998.0  509000.0  не битый    4.0   \n","\n","          кузов топливо трансмиссия        цвет    привод   руль комплектация  \\\n","0         седан  бензин       робот     зелёный  передний  левый         Base   \n","1   внедорожник  дизель       робот      чёрный    полный  левый         Base   \n","2         седан  бензин     автомат      чёрный    полный  левый         Base   \n","3   внедорожник  бензин       робот       серый    полный  левый         Base   \n","4         седан  бензин    механика       синий  передний  левый         Base   \n","5         седан  бензин    механика      чёрный  передний  левый         Base   \n","6         седан  бензин    вариатор      чёрный  передний  левый         Base   \n","7         седан  бензин    вариатор      чёрный  передний  левый         Base   \n","8       хетчбэк  дизель       робот       белый    полный  левый         Base   \n","9         седан  бензин    механика      чёрный  передний  левый         Base   \n","10    универсал  бензин     автомат      чёрный  передний  левый         Base   \n","11        седан  дизель     автомат  коричневый    полный  левый     Standard   \n","12  внедорожник  бензин       робот   оранжевый    полный  левый         Base   \n","13  внедорожник  дизель     автомат       белый    полный  левый      Advance   \n","14      хетчбэк  бензин       робот       белый  передний  левый     Ambiente   \n","15  внедорожник  бензин       робот      чёрный    полный  левый         Base   \n","16      хетчбэк  бензин       робот       белый    полный  левый         Base   \n","17    универсал  дизель    механика      чёрный  передний  левый         Base   \n","18        седан  бензин    механика     бежевый  передний  левый         Base   \n","19        седан  бензин    механика     голубой  передний  левый         Base   \n","\n","       цена  \n","0   1490000  \n","1    950000  \n","2    960000  \n","3    897000  \n","4    200000  \n","5    129000  \n","6   1090000  \n","7    480000  \n","8   2690000  \n","9    120000  \n","10    60000  \n","11   790000  \n","12  1100000  \n","13  2550000  \n","14   470000  \n","15  1050000  \n","16  1150000  \n","17   310000  \n","18   245000  \n","19   215000  "],"text/html":["\n","  <div id=\"df-eacde63b-1d41-42ec-86b5-fa6d62614a19\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>марка</th>\n","      <th>модель</th>\n","      <th>поколение</th>\n","      <th>мощность</th>\n","      <th>год</th>\n","      <th>пробег</th>\n","      <th>состояние</th>\n","      <th>двери</th>\n","      <th>кузов</th>\n","      <th>топливо</th>\n","      <th>трансмиссия</th>\n","      <th>цвет</th>\n","      <th>привод</th>\n","      <th>руль</th>\n","      <th>комплектация</th>\n","      <th>цена</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Audi</td>\n","      <td>A4</td>\n","      <td>B9</td>\n","      <td>150</td>\n","      <td>2017.0</td>\n","      <td>89000.0</td>\n","      <td>не битый</td>\n","      <td>4.0</td>\n","      <td>седан</td>\n","      <td>бензин</td>\n","      <td>робот</td>\n","      <td>зелёный</td>\n","      <td>передний</td>\n","      <td>левый</td>\n","      <td>Base</td>\n","      <td>1490000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Audi</td>\n","      <td>Q5</td>\n","      <td>I</td>\n","      <td>170</td>\n","      <td>2012.0</td>\n","      <td>104000.0</td>\n","      <td>не битый</td>\n","      <td>5.0</td>\n","      <td>внедорожник</td>\n","      <td>дизель</td>\n","      <td>робот</td>\n","      <td>чёрный</td>\n","      <td>полный</td>\n","      <td>левый</td>\n","      <td>Base</td>\n","      <td>950000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Audi</td>\n","      <td>A8</td>\n","      <td>D4</td>\n","      <td>310</td>\n","      <td>2014.0</td>\n","      <td>41000.0</td>\n","      <td>битый</td>\n","      <td>4.0</td>\n","      <td>седан</td>\n","      <td>бензин</td>\n","      <td>автомат</td>\n","      <td>чёрный</td>\n","      <td>полный</td>\n","      <td>левый</td>\n","      <td>Base</td>\n","      <td>960000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Audi</td>\n","      <td>Q5</td>\n","      <td>I</td>\n","      <td>211</td>\n","      <td>2010.0</td>\n","      <td>113043.0</td>\n","      <td>не битый</td>\n","      <td>5.0</td>\n","      <td>внедорожник</td>\n","      <td>бензин</td>\n","      <td>робот</td>\n","      <td>серый</td>\n","      <td>полный</td>\n","      <td>левый</td>\n","      <td>Base</td>\n","      <td>897000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Audi</td>\n","      <td>A8</td>\n","      <td>D2</td>\n","      <td>174</td>\n","      <td>1996.0</td>\n","      <td>460000.0</td>\n","      <td>не битый</td>\n","      <td>4.0</td>\n","      <td>седан</td>\n","      <td>бензин</td>\n","      <td>механика</td>\n","      <td>синий</td>\n","      <td>передний</td>\n","      <td>левый</td>\n","      <td>Base</td>\n","      <td>200000</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Audi</td>\n","      <td>A6</td>\n","      <td>C4</td>\n","      <td>150</td>\n","      <td>1995.0</td>\n","      <td>325757.0</td>\n","      <td>не битый</td>\n","      <td>4.0</td>\n","      <td>седан</td>\n","      <td>бензин</td>\n","      <td>механика</td>\n","      <td>чёрный</td>\n","      <td>передний</td>\n","      <td>левый</td>\n","      <td>Base</td>\n","      <td>129000</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Audi</td>\n","      <td>A6</td>\n","      <td>C7</td>\n","      <td>180</td>\n","      <td>2013.0</td>\n","      <td>96341.0</td>\n","      <td>не битый</td>\n","      <td>4.0</td>\n","      <td>седан</td>\n","      <td>бензин</td>\n","      <td>вариатор</td>\n","      <td>чёрный</td>\n","      <td>передний</td>\n","      <td>левый</td>\n","      <td>Base</td>\n","      <td>1090000</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Audi</td>\n","      <td>A6</td>\n","      <td>C6</td>\n","      <td>177</td>\n","      <td>2006.0</td>\n","      <td>180000.0</td>\n","      <td>не битый</td>\n","      <td>4.0</td>\n","      <td>седан</td>\n","      <td>бензин</td>\n","      <td>вариатор</td>\n","      <td>чёрный</td>\n","      <td>передний</td>\n","      <td>левый</td>\n","      <td>Base</td>\n","      <td>480000</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Audi</td>\n","      <td>A7</td>\n","      <td>I</td>\n","      <td>245</td>\n","      <td>2015.0</td>\n","      <td>58669.0</td>\n","      <td>не битый</td>\n","      <td>5.0</td>\n","      <td>хетчбэк</td>\n","      <td>дизель</td>\n","      <td>робот</td>\n","      <td>белый</td>\n","      <td>полный</td>\n","      <td>левый</td>\n","      <td>Base</td>\n","      <td>2690000</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Audi</td>\n","      <td>80</td>\n","      <td>B4</td>\n","      <td>90</td>\n","      <td>1994.0</td>\n","      <td>200000.0</td>\n","      <td>не битый</td>\n","      <td>4.0</td>\n","      <td>седан</td>\n","      <td>бензин</td>\n","      <td>механика</td>\n","      <td>чёрный</td>\n","      <td>передний</td>\n","      <td>левый</td>\n","      <td>Base</td>\n","      <td>120000</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Audi</td>\n","      <td>A6</td>\n","      <td>C4</td>\n","      <td>150</td>\n","      <td>1997.0</td>\n","      <td>330000.0</td>\n","      <td>не битый</td>\n","      <td>5.0</td>\n","      <td>универсал</td>\n","      <td>бензин</td>\n","      <td>автомат</td>\n","      <td>чёрный</td>\n","      <td>передний</td>\n","      <td>левый</td>\n","      <td>Base</td>\n","      <td>60000</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Audi</td>\n","      <td>A4</td>\n","      <td>B8</td>\n","      <td>239</td>\n","      <td>2008.0</td>\n","      <td>220000.0</td>\n","      <td>не битый</td>\n","      <td>4.0</td>\n","      <td>седан</td>\n","      <td>дизель</td>\n","      <td>автомат</td>\n","      <td>коричневый</td>\n","      <td>полный</td>\n","      <td>левый</td>\n","      <td>Standard</td>\n","      <td>790000</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Audi</td>\n","      <td>Q3</td>\n","      <td>I</td>\n","      <td>170</td>\n","      <td>2012.0</td>\n","      <td>129000.0</td>\n","      <td>не битый</td>\n","      <td>5.0</td>\n","      <td>внедорожник</td>\n","      <td>бензин</td>\n","      <td>робот</td>\n","      <td>оранжевый</td>\n","      <td>полный</td>\n","      <td>левый</td>\n","      <td>Base</td>\n","      <td>1100000</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Audi</td>\n","      <td>Q7</td>\n","      <td>4M</td>\n","      <td>249</td>\n","      <td>2016.0</td>\n","      <td>166812.0</td>\n","      <td>не битый</td>\n","      <td>5.0</td>\n","      <td>внедорожник</td>\n","      <td>дизель</td>\n","      <td>автомат</td>\n","      <td>белый</td>\n","      <td>полный</td>\n","      <td>левый</td>\n","      <td>Advance</td>\n","      <td>2550000</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Audi</td>\n","      <td>A3</td>\n","      <td>8P</td>\n","      <td>125</td>\n","      <td>2011.0</td>\n","      <td>183000.0</td>\n","      <td>не битый</td>\n","      <td>5.0</td>\n","      <td>хетчбэк</td>\n","      <td>бензин</td>\n","      <td>робот</td>\n","      <td>белый</td>\n","      <td>передний</td>\n","      <td>левый</td>\n","      <td>Ambiente</td>\n","      <td>470000</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Audi</td>\n","      <td>Q3</td>\n","      <td>I</td>\n","      <td>170</td>\n","      <td>2012.0</td>\n","      <td>115000.0</td>\n","      <td>не битый</td>\n","      <td>5.0</td>\n","      <td>внедорожник</td>\n","      <td>бензин</td>\n","      <td>робот</td>\n","      <td>чёрный</td>\n","      <td>полный</td>\n","      <td>левый</td>\n","      <td>Base</td>\n","      <td>1050000</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Audi</td>\n","      <td>A7</td>\n","      <td>I</td>\n","      <td>204</td>\n","      <td>2010.0</td>\n","      <td>140000.0</td>\n","      <td>не битый</td>\n","      <td>5.0</td>\n","      <td>хетчбэк</td>\n","      <td>бензин</td>\n","      <td>робот</td>\n","      <td>белый</td>\n","      <td>полный</td>\n","      <td>левый</td>\n","      <td>Base</td>\n","      <td>1150000</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>Audi</td>\n","      <td>A4</td>\n","      <td>B6</td>\n","      <td>130</td>\n","      <td>2004.0</td>\n","      <td>300000.0</td>\n","      <td>не битый</td>\n","      <td>5.0</td>\n","      <td>универсал</td>\n","      <td>дизель</td>\n","      <td>механика</td>\n","      <td>чёрный</td>\n","      <td>передний</td>\n","      <td>левый</td>\n","      <td>Base</td>\n","      <td>310000</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>Audi</td>\n","      <td>A6</td>\n","      <td>C5</td>\n","      <td>150</td>\n","      <td>2000.0</td>\n","      <td>269312.0</td>\n","      <td>не битый</td>\n","      <td>4.0</td>\n","      <td>седан</td>\n","      <td>бензин</td>\n","      <td>механика</td>\n","      <td>бежевый</td>\n","      <td>передний</td>\n","      <td>левый</td>\n","      <td>Base</td>\n","      <td>245000</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>Audi</td>\n","      <td>A6</td>\n","      <td>C5</td>\n","      <td>125</td>\n","      <td>1998.0</td>\n","      <td>509000.0</td>\n","      <td>не битый</td>\n","      <td>4.0</td>\n","      <td>седан</td>\n","      <td>бензин</td>\n","      <td>механика</td>\n","      <td>голубой</td>\n","      <td>передний</td>\n","      <td>левый</td>\n","      <td>Base</td>\n","      <td>215000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-eacde63b-1d41-42ec-86b5-fa6d62614a19')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-eacde63b-1d41-42ec-86b5-fa6d62614a19 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-eacde63b-1d41-42ec-86b5-fa6d62614a19');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["df.info()"],"metadata":{"id":"voqhdPi_8-on","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1656437990365,"user_tz":-180,"elapsed":4,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"704b38b5-65b2-4aa3-ac18-3fd2f94f71d4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 19983 entries, 0 to 19982\n","Data columns (total 16 columns):\n"," #   Column        Non-Null Count  Dtype  \n","---  ------        --------------  -----  \n"," 0   марка         19983 non-null  object \n"," 1   модель        19983 non-null  object \n"," 2   поколение     19983 non-null  object \n"," 3   мощность      19983 non-null  int64  \n"," 4   год           19983 non-null  float64\n"," 5   пробег        19983 non-null  float64\n"," 6   состояние     19983 non-null  object \n"," 7   двери         19983 non-null  float64\n"," 8   кузов         19983 non-null  object \n"," 9   топливо       19983 non-null  object \n"," 10  трансмиссия   19983 non-null  object \n"," 11  цвет          19983 non-null  object \n"," 12  привод        19983 non-null  object \n"," 13  руль          19983 non-null  object \n"," 14  комплектация  19983 non-null  object \n"," 15  цена          19983 non-null  int64  \n","dtypes: float64(3), int64(2), object(11)\n","memory usage: 2.4+ MB\n"]}]},{"cell_type":"code","source":["df.hist(figsize=(15, 15))"],"metadata":{"id":"vNX9oWuGAmOB","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1656437992350,"user_tz":-180,"elapsed":1988,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"a05410f8-2add-461f-93c5-085562bfd30d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[<matplotlib.axes._subplots.AxesSubplot object at 0x7f2b477c3090>,\n","        <matplotlib.axes._subplots.AxesSubplot object at 0x7f2b4778f590>],\n","       [<matplotlib.axes._subplots.AxesSubplot object at 0x7f2b47748b50>,\n","        <matplotlib.axes._subplots.AxesSubplot object at 0x7f2b4770c190>],\n","       [<matplotlib.axes._subplots.AxesSubplot object at 0x7f2b476c3790>,\n","        <matplotlib.axes._subplots.AxesSubplot object at 0x7f2b47678d10>]],\n","      dtype=object)"]},"metadata":{},"execution_count":6},{"output_type":"display_data","data":{"text/plain":["<Figure size 1080x1080 with 6 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["# Для достижения максимальной точности предсказания необходимо удалить из таблицы\n","# маловлияющие на цену параметры, такие как: комплектация автомобиля, \n","# цвет, поколение (так как у нас уже есть год выпуска)\n","\n","df = df.drop(['поколение', 'цвет', 'комплектация'], axis=1)\n","df.head()"],"metadata":{"id":"ozDE1dsXCCLk","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1656663918522,"user_tz":-180,"elapsed":626,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"5b670980-20a6-4d42-dfa3-38958bd2a86a"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  марка модель  мощность     год    пробег состояние  двери        кузов  \\\n","0  Audi     A4       150  2017.0   89000.0  не битый    4.0        седан   \n","1  Audi     Q5       170  2012.0  104000.0  не битый    5.0  внедорожник   \n","2  Audi     A8       310  2014.0   41000.0     битый    4.0        седан   \n","3  Audi     Q5       211  2010.0  113043.0  не битый    5.0  внедорожник   \n","4  Audi     A8       174  1996.0  460000.0  не битый    4.0        седан   \n","\n","  топливо трансмиссия    привод   руль     цена  \n","0  бензин       робот  передний  левый  1490000  \n","1  дизель       робот    полный  левый   950000  \n","2  бензин     автомат    полный  левый   960000  \n","3  бензин       робот    полный  левый   897000  \n","4  бензин    механика  передний  левый   200000  "],"text/html":["\n","  <div id=\"df-52b98f62-2efb-4c89-af76-2eb417171612\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>марка</th>\n","      <th>модель</th>\n","      <th>мощность</th>\n","      <th>год</th>\n","      <th>пробег</th>\n","      <th>состояние</th>\n","      <th>двери</th>\n","      <th>кузов</th>\n","      <th>топливо</th>\n","      <th>трансмиссия</th>\n","      <th>привод</th>\n","      <th>руль</th>\n","      <th>цена</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Audi</td>\n","      <td>A4</td>\n","      <td>150</td>\n","      <td>2017.0</td>\n","      <td>89000.0</td>\n","      <td>не битый</td>\n","      <td>4.0</td>\n","      <td>седан</td>\n","      <td>бензин</td>\n","      <td>робот</td>\n","      <td>передний</td>\n","      <td>левый</td>\n","      <td>1490000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Audi</td>\n","      <td>Q5</td>\n","      <td>170</td>\n","      <td>2012.0</td>\n","      <td>104000.0</td>\n","      <td>не битый</td>\n","      <td>5.0</td>\n","      <td>внедорожник</td>\n","      <td>дизель</td>\n","      <td>робот</td>\n","      <td>полный</td>\n","      <td>левый</td>\n","      <td>950000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Audi</td>\n","      <td>A8</td>\n","      <td>310</td>\n","      <td>2014.0</td>\n","      <td>41000.0</td>\n","      <td>битый</td>\n","      <td>4.0</td>\n","      <td>седан</td>\n","      <td>бензин</td>\n","      <td>автомат</td>\n","      <td>полный</td>\n","      <td>левый</td>\n","      <td>960000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Audi</td>\n","      <td>Q5</td>\n","      <td>211</td>\n","      <td>2010.0</td>\n","      <td>113043.0</td>\n","      <td>не битый</td>\n","      <td>5.0</td>\n","      <td>внедорожник</td>\n","      <td>бензин</td>\n","      <td>робот</td>\n","      <td>полный</td>\n","      <td>левый</td>\n","      <td>897000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Audi</td>\n","      <td>A8</td>\n","      <td>174</td>\n","      <td>1996.0</td>\n","      <td>460000.0</td>\n","      <td>не битый</td>\n","      <td>4.0</td>\n","      <td>седан</td>\n","      <td>бензин</td>\n","      <td>механика</td>\n","      <td>передний</td>\n","      <td>левый</td>\n","      <td>200000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-52b98f62-2efb-4c89-af76-2eb417171612')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-52b98f62-2efb-4c89-af76-2eb417171612 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-52b98f62-2efb-4c89-af76-2eb417171612');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["# Необходимо удалить из таблицы автомобили в битом состоянии, т.к их стоимость формируется совсем отдельно.\n","\n","mask = df['состояние'] == 'не битый'\n","df = df[mask]\n","df.head()"],"metadata":{"id":"UMBcZhQuoJdG","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1656663921092,"user_tz":-180,"elapsed":370,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"0119fc85-c150-4281-ec6e-3ca4f6501dc6"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  марка модель  мощность     год    пробег состояние  двери        кузов  \\\n","0  Audi     A4       150  2017.0   89000.0  не битый    4.0        седан   \n","1  Audi     Q5       170  2012.0  104000.0  не битый    5.0  внедорожник   \n","3  Audi     Q5       211  2010.0  113043.0  не битый    5.0  внедорожник   \n","4  Audi     A8       174  1996.0  460000.0  не битый    4.0        седан   \n","5  Audi     A6       150  1995.0  325757.0  не битый    4.0        седан   \n","\n","  топливо трансмиссия    привод   руль     цена  \n","0  бензин       робот  передний  левый  1490000  \n","1  дизель       робот    полный  левый   950000  \n","3  бензин       робот    полный  левый   897000  \n","4  бензин    механика  передний  левый   200000  \n","5  бензин    механика  передний  левый   129000  "],"text/html":["\n","  <div id=\"df-f337d258-82dd-41a8-8f67-53f17d3765fa\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>марка</th>\n","      <th>модель</th>\n","      <th>мощность</th>\n","      <th>год</th>\n","      <th>пробег</th>\n","      <th>состояние</th>\n","      <th>двери</th>\n","      <th>кузов</th>\n","      <th>топливо</th>\n","      <th>трансмиссия</th>\n","      <th>привод</th>\n","      <th>руль</th>\n","      <th>цена</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Audi</td>\n","      <td>A4</td>\n","      <td>150</td>\n","      <td>2017.0</td>\n","      <td>89000.0</td>\n","      <td>не битый</td>\n","      <td>4.0</td>\n","      <td>седан</td>\n","      <td>бензин</td>\n","      <td>робот</td>\n","      <td>передний</td>\n","      <td>левый</td>\n","      <td>1490000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Audi</td>\n","      <td>Q5</td>\n","      <td>170</td>\n","      <td>2012.0</td>\n","      <td>104000.0</td>\n","      <td>не битый</td>\n","      <td>5.0</td>\n","      <td>внедорожник</td>\n","      <td>дизель</td>\n","      <td>робот</td>\n","      <td>полный</td>\n","      <td>левый</td>\n","      <td>950000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Audi</td>\n","      <td>Q5</td>\n","      <td>211</td>\n","      <td>2010.0</td>\n","      <td>113043.0</td>\n","      <td>не битый</td>\n","      <td>5.0</td>\n","      <td>внедорожник</td>\n","      <td>бензин</td>\n","      <td>робот</td>\n","      <td>полный</td>\n","      <td>левый</td>\n","      <td>897000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Audi</td>\n","      <td>A8</td>\n","      <td>174</td>\n","      <td>1996.0</td>\n","      <td>460000.0</td>\n","      <td>не битый</td>\n","      <td>4.0</td>\n","      <td>седан</td>\n","      <td>бензин</td>\n","      <td>механика</td>\n","      <td>передний</td>\n","      <td>левый</td>\n","      <td>200000</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Audi</td>\n","      <td>A6</td>\n","      <td>150</td>\n","      <td>1995.0</td>\n","      <td>325757.0</td>\n","      <td>не битый</td>\n","      <td>4.0</td>\n","      <td>седан</td>\n","      <td>бензин</td>\n","      <td>механика</td>\n","      <td>передний</td>\n","      <td>левый</td>\n","      <td>129000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f337d258-82dd-41a8-8f67-53f17d3765fa')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-f337d258-82dd-41a8-8f67-53f17d3765fa button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-f337d258-82dd-41a8-8f67-53f17d3765fa');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["# теперь удалим автомобили с правым рулем, т.к. их количество должно быть несущественным\n","\n","mask2 = df['руль'] == 'левый'\n","df = df[mask2]\n","df.head(100)"],"metadata":{"id":"h2_9I56iurNu","colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1656663923477,"user_tz":-180,"elapsed":475,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"06b6c386-bba6-41ca-c670-c497f54ea93f"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    марка модель  мощность     год    пробег состояние  двери        кузов  \\\n","0    Audi     A4       150  2017.0   89000.0  не битый    4.0        седан   \n","1    Audi     Q5       170  2012.0  104000.0  не битый    5.0  внедорожник   \n","3    Audi     Q5       211  2010.0  113043.0  не битый    5.0  внедорожник   \n","4    Audi     A8       174  1996.0  460000.0  не битый    4.0        седан   \n","5    Audi     A6       150  1995.0  325757.0  не битый    4.0        седан   \n","..    ...    ...       ...     ...       ...       ...    ...          ...   \n","102  Audi     A6       170  2011.0  120500.0  не битый    4.0        седан   \n","103  Audi     Q3       180  2016.0   51000.0  не битый    5.0  внедорожник   \n","104  Audi     A8       174  1995.0  700000.0  не битый    4.0        седан   \n","105  Audi     A4       150  2017.0   60000.0  не битый    4.0        седан   \n","107  Audi     A6       177  2008.0  226000.0  не битый    4.0        седан   \n","\n","    топливо трансмиссия    привод   руль     цена  \n","0    бензин       робот  передний  левый  1490000  \n","1    дизель       робот    полный  левый   950000  \n","3    бензин       робот    полный  левый   897000  \n","4    бензин    механика  передний  левый   200000  \n","5    бензин    механика  передний  левый   129000  \n","..      ...         ...       ...    ...      ...  \n","102  бензин    вариатор  передний  левый   690000  \n","103  бензин       робот    полный  левый  1460000  \n","104  бензин     автомат  передний  левый   350000  \n","105  бензин       робот  передний  левый  1450000  \n","107  бензин    вариатор  передний  левый   535000  \n","\n","[100 rows x 13 columns]"],"text/html":["\n","  <div id=\"df-c9b4084d-c88c-49ca-bdda-df18bb76fb5d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>марка</th>\n","      <th>модель</th>\n","      <th>мощность</th>\n","      <th>год</th>\n","      <th>пробег</th>\n","      <th>состояние</th>\n","      <th>двери</th>\n","      <th>кузов</th>\n","      <th>топливо</th>\n","      <th>трансмиссия</th>\n","      <th>привод</th>\n","      <th>руль</th>\n","      <th>цена</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Audi</td>\n","      <td>A4</td>\n","      <td>150</td>\n","      <td>2017.0</td>\n","      <td>89000.0</td>\n","      <td>не битый</td>\n","      <td>4.0</td>\n","      <td>седан</td>\n","      <td>бензин</td>\n","      <td>робот</td>\n","      <td>передний</td>\n","      <td>левый</td>\n","      <td>1490000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Audi</td>\n","      <td>Q5</td>\n","      <td>170</td>\n","      <td>2012.0</td>\n","      <td>104000.0</td>\n","      <td>не битый</td>\n","      <td>5.0</td>\n","      <td>внедорожник</td>\n","      <td>дизель</td>\n","      <td>робот</td>\n","      <td>полный</td>\n","      <td>левый</td>\n","      <td>950000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Audi</td>\n","      <td>Q5</td>\n","      <td>211</td>\n","      <td>2010.0</td>\n","      <td>113043.0</td>\n","      <td>не битый</td>\n","      <td>5.0</td>\n","      <td>внедорожник</td>\n","      <td>бензин</td>\n","      <td>робот</td>\n","      <td>полный</td>\n","      <td>левый</td>\n","      <td>897000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Audi</td>\n","      <td>A8</td>\n","      <td>174</td>\n","      <td>1996.0</td>\n","      <td>460000.0</td>\n","      <td>не битый</td>\n","      <td>4.0</td>\n","      <td>седан</td>\n","      <td>бензин</td>\n","      <td>механика</td>\n","      <td>передний</td>\n","      <td>левый</td>\n","      <td>200000</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Audi</td>\n","      <td>A6</td>\n","      <td>150</td>\n","      <td>1995.0</td>\n","      <td>325757.0</td>\n","      <td>не битый</td>\n","      <td>4.0</td>\n","      <td>седан</td>\n","      <td>бензин</td>\n","      <td>механика</td>\n","      <td>передний</td>\n","      <td>левый</td>\n","      <td>129000</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>102</th>\n","      <td>Audi</td>\n","      <td>A6</td>\n","      <td>170</td>\n","      <td>2011.0</td>\n","      <td>120500.0</td>\n","      <td>не битый</td>\n","      <td>4.0</td>\n","      <td>седан</td>\n","      <td>бензин</td>\n","      <td>вариатор</td>\n","      <td>передний</td>\n","      <td>левый</td>\n","      <td>690000</td>\n","    </tr>\n","    <tr>\n","      <th>103</th>\n","      <td>Audi</td>\n","      <td>Q3</td>\n","      <td>180</td>\n","      <td>2016.0</td>\n","      <td>51000.0</td>\n","      <td>не битый</td>\n","      <td>5.0</td>\n","      <td>внедорожник</td>\n","      <td>бензин</td>\n","      <td>робот</td>\n","      <td>полный</td>\n","      <td>левый</td>\n","      <td>1460000</td>\n","    </tr>\n","    <tr>\n","      <th>104</th>\n","      <td>Audi</td>\n","      <td>A8</td>\n","      <td>174</td>\n","      <td>1995.0</td>\n","      <td>700000.0</td>\n","      <td>не битый</td>\n","      <td>4.0</td>\n","      <td>седан</td>\n","      <td>бензин</td>\n","      <td>автомат</td>\n","      <td>передний</td>\n","      <td>левый</td>\n","      <td>350000</td>\n","    </tr>\n","    <tr>\n","      <th>105</th>\n","      <td>Audi</td>\n","      <td>A4</td>\n","      <td>150</td>\n","      <td>2017.0</td>\n","      <td>60000.0</td>\n","      <td>не битый</td>\n","      <td>4.0</td>\n","      <td>седан</td>\n","      <td>бензин</td>\n","      <td>робот</td>\n","      <td>передний</td>\n","      <td>левый</td>\n","      <td>1450000</td>\n","    </tr>\n","    <tr>\n","      <th>107</th>\n","      <td>Audi</td>\n","      <td>A6</td>\n","      <td>177</td>\n","      <td>2008.0</td>\n","      <td>226000.0</td>\n","      <td>не битый</td>\n","      <td>4.0</td>\n","      <td>седан</td>\n","      <td>бензин</td>\n","      <td>вариатор</td>\n","      <td>передний</td>\n","      <td>левый</td>\n","      <td>535000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>100 rows × 13 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c9b4084d-c88c-49ca-bdda-df18bb76fb5d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c9b4084d-c88c-49ca-bdda-df18bb76fb5d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c9b4084d-c88c-49ca-bdda-df18bb76fb5d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["# теперь можно удалить ненужные столбцы \"состояние\" и \"руль\"\n","\n","df = df.drop(['состояние', 'руль'], axis=1)\n","df.head()"],"metadata":{"id":"j4OPiA1YwOyP","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1656663924856,"user_tz":-180,"elapsed":12,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"9eba1fc2-3feb-43a0-f1ca-c3c489fe93ce"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  марка модель  мощность     год    пробег  двери        кузов топливо  \\\n","0  Audi     A4       150  2017.0   89000.0    4.0        седан  бензин   \n","1  Audi     Q5       170  2012.0  104000.0    5.0  внедорожник  дизель   \n","3  Audi     Q5       211  2010.0  113043.0    5.0  внедорожник  бензин   \n","4  Audi     A8       174  1996.0  460000.0    4.0        седан  бензин   \n","5  Audi     A6       150  1995.0  325757.0    4.0        седан  бензин   \n","\n","  трансмиссия    привод     цена  \n","0       робот  передний  1490000  \n","1       робот    полный   950000  \n","3       робот    полный   897000  \n","4    механика  передний   200000  \n","5    механика  передний   129000  "],"text/html":["\n","  <div id=\"df-3d97dd57-7932-4505-aba6-31b2f5763f1a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>марка</th>\n","      <th>модель</th>\n","      <th>мощность</th>\n","      <th>год</th>\n","      <th>пробег</th>\n","      <th>двери</th>\n","      <th>кузов</th>\n","      <th>топливо</th>\n","      <th>трансмиссия</th>\n","      <th>привод</th>\n","      <th>цена</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Audi</td>\n","      <td>A4</td>\n","      <td>150</td>\n","      <td>2017.0</td>\n","      <td>89000.0</td>\n","      <td>4.0</td>\n","      <td>седан</td>\n","      <td>бензин</td>\n","      <td>робот</td>\n","      <td>передний</td>\n","      <td>1490000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Audi</td>\n","      <td>Q5</td>\n","      <td>170</td>\n","      <td>2012.0</td>\n","      <td>104000.0</td>\n","      <td>5.0</td>\n","      <td>внедорожник</td>\n","      <td>дизель</td>\n","      <td>робот</td>\n","      <td>полный</td>\n","      <td>950000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Audi</td>\n","      <td>Q5</td>\n","      <td>211</td>\n","      <td>2010.0</td>\n","      <td>113043.0</td>\n","      <td>5.0</td>\n","      <td>внедорожник</td>\n","      <td>бензин</td>\n","      <td>робот</td>\n","      <td>полный</td>\n","      <td>897000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Audi</td>\n","      <td>A8</td>\n","      <td>174</td>\n","      <td>1996.0</td>\n","      <td>460000.0</td>\n","      <td>4.0</td>\n","      <td>седан</td>\n","      <td>бензин</td>\n","      <td>механика</td>\n","      <td>передний</td>\n","      <td>200000</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Audi</td>\n","      <td>A6</td>\n","      <td>150</td>\n","      <td>1995.0</td>\n","      <td>325757.0</td>\n","      <td>4.0</td>\n","      <td>седан</td>\n","      <td>бензин</td>\n","      <td>механика</td>\n","      <td>передний</td>\n","      <td>129000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3d97dd57-7932-4505-aba6-31b2f5763f1a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3d97dd57-7932-4505-aba6-31b2f5763f1a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3d97dd57-7932-4505-aba6-31b2f5763f1a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["# Необходимо удалить из базы совсем старые автомобили, \n","# они являются ретро автомобилями и их цена может\n","# превышать стоимость новых\n","\n","mask3 = df['год'] > 1990.0\n","df = df[mask3]\n","df.head(30)"],"metadata":{"id":"ZBK8vJ19zRYI","colab":{"base_uri":"https://localhost:8080/","height":990},"executionInfo":{"status":"ok","timestamp":1656663927121,"user_tz":-180,"elapsed":317,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"c999e6da-a45d-4f83-bdd6-5b82041fb3bc"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   марка модель  мощность     год    пробег  двери        кузов топливо  \\\n","0   Audi     A4       150  2017.0   89000.0    4.0        седан  бензин   \n","1   Audi     Q5       170  2012.0  104000.0    5.0  внедорожник  дизель   \n","3   Audi     Q5       211  2010.0  113043.0    5.0  внедорожник  бензин   \n","4   Audi     A8       174  1996.0  460000.0    4.0        седан  бензин   \n","5   Audi     A6       150  1995.0  325757.0    4.0        седан  бензин   \n","6   Audi     A6       180  2013.0   96341.0    4.0        седан  бензин   \n","7   Audi     A6       177  2006.0  180000.0    4.0        седан  бензин   \n","8   Audi     A7       245  2015.0   58669.0    5.0      хетчбэк  дизель   \n","9   Audi     80        90  1994.0  200000.0    4.0        седан  бензин   \n","10  Audi     A6       150  1997.0  330000.0    5.0    универсал  бензин   \n","11  Audi     A4       239  2008.0  220000.0    4.0        седан  дизель   \n","12  Audi     Q3       170  2012.0  129000.0    5.0  внедорожник  бензин   \n","13  Audi     Q7       249  2016.0  166812.0    5.0  внедорожник  дизель   \n","14  Audi     A3       125  2011.0  183000.0    5.0      хетчбэк  бензин   \n","15  Audi     Q3       170  2012.0  115000.0    5.0  внедорожник  бензин   \n","16  Audi     A7       204  2010.0  140000.0    5.0      хетчбэк  бензин   \n","17  Audi     A4       130  2004.0  300000.0    5.0    универсал  дизель   \n","18  Audi     A6       150  2000.0  269312.0    4.0        седан  бензин   \n","19  Audi     A6       125  1998.0  509000.0    4.0        седан  бензин   \n","20  Audi     A6       190  2018.0   15000.0    4.0        седан  бензин   \n","21  Audi     A6       115  1995.0  500000.0    4.0        седан  бензин   \n","23  Audi     A4       125  1995.0  100000.0    4.0        седан  бензин   \n","26  Audi     Q3       180  2016.0   49000.0    5.0  внедорожник  бензин   \n","27  Audi     A6       177  2004.0  300000.0    4.0        седан  бензин   \n","28  Audi     A4       120  2008.0  186000.0    4.0        седан  бензин   \n","29  Audi     Q7       326  2008.0  158000.0    5.0  внедорожник  дизель   \n","30  Audi     A3       125  2011.0  111000.0    5.0      хетчбэк  бензин   \n","31  Audi     A6       180  2012.0  225000.0    4.0        седан  бензин   \n","32  Audi    100       133  1991.0   20000.0    4.0        седан  бензин   \n","33  Audi     A4       101  1995.0  391293.0    4.0        седан  бензин   \n","\n","   трансмиссия    привод     цена  \n","0        робот  передний  1490000  \n","1        робот    полный   950000  \n","3        робот    полный   897000  \n","4     механика  передний   200000  \n","5     механика  передний   129000  \n","6     вариатор  передний  1090000  \n","7     вариатор  передний   480000  \n","8        робот    полный  2690000  \n","9     механика  передний   120000  \n","10     автомат  передний    60000  \n","11     автомат    полный   790000  \n","12       робот    полный  1100000  \n","13     автомат    полный  2550000  \n","14       робот  передний   470000  \n","15       робот    полный  1050000  \n","16       робот    полный  1150000  \n","17    механика  передний   310000  \n","18    механика  передний   245000  \n","19    механика  передний   215000  \n","20       робот  передний  2100000  \n","21     автомат  передний   120000  \n","23    механика  передний   170000  \n","26       робот    полный  1539000  \n","27    вариатор  передний   460000  \n","28    механика  передний   545000  \n","29     автомат    полный   875000  \n","30    механика  передний   447000  \n","31    вариатор  передний   700000  \n","32    механика  передний    50000  \n","33    механика  передний    70000  "],"text/html":["\n","  <div id=\"df-02260d9e-09ef-4ee8-816f-3a9c35b04c31\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>марка</th>\n","      <th>модель</th>\n","      <th>мощность</th>\n","      <th>год</th>\n","      <th>пробег</th>\n","      <th>двери</th>\n","      <th>кузов</th>\n","      <th>топливо</th>\n","      <th>трансмиссия</th>\n","      <th>привод</th>\n","      <th>цена</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Audi</td>\n","      <td>A4</td>\n","      <td>150</td>\n","      <td>2017.0</td>\n","      <td>89000.0</td>\n","      <td>4.0</td>\n","      <td>седан</td>\n","      <td>бензин</td>\n","      <td>робот</td>\n","      <td>передний</td>\n","      <td>1490000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Audi</td>\n","      <td>Q5</td>\n","      <td>170</td>\n","      <td>2012.0</td>\n","      <td>104000.0</td>\n","      <td>5.0</td>\n","      <td>внедорожник</td>\n","      <td>дизель</td>\n","      <td>робот</td>\n","      <td>полный</td>\n","      <td>950000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Audi</td>\n","      <td>Q5</td>\n","      <td>211</td>\n","      <td>2010.0</td>\n","      <td>113043.0</td>\n","      <td>5.0</td>\n","      <td>внедорожник</td>\n","      <td>бензин</td>\n","      <td>робот</td>\n","      <td>полный</td>\n","      <td>897000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Audi</td>\n","      <td>A8</td>\n","      <td>174</td>\n","      <td>1996.0</td>\n","      <td>460000.0</td>\n","      <td>4.0</td>\n","      <td>седан</td>\n","      <td>бензин</td>\n","      <td>механика</td>\n","      <td>передний</td>\n","      <td>200000</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Audi</td>\n","      <td>A6</td>\n","      <td>150</td>\n","      <td>1995.0</td>\n","      <td>325757.0</td>\n","      <td>4.0</td>\n","      <td>седан</td>\n","      <td>бензин</td>\n","      <td>механика</td>\n","      <td>передний</td>\n","      <td>129000</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Audi</td>\n","      <td>A6</td>\n","      <td>180</td>\n","      <td>2013.0</td>\n","      <td>96341.0</td>\n","      <td>4.0</td>\n","      <td>седан</td>\n","      <td>бензин</td>\n","      <td>вариатор</td>\n","      <td>передний</td>\n","      <td>1090000</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Audi</td>\n","      <td>A6</td>\n","      <td>177</td>\n","      <td>2006.0</td>\n","      <td>180000.0</td>\n","      <td>4.0</td>\n","      <td>седан</td>\n","      <td>бензин</td>\n","      <td>вариатор</td>\n","      <td>передний</td>\n","      <td>480000</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Audi</td>\n","      <td>A7</td>\n","      <td>245</td>\n","      <td>2015.0</td>\n","      <td>58669.0</td>\n","      <td>5.0</td>\n","      <td>хетчбэк</td>\n","      <td>дизель</td>\n","      <td>робот</td>\n","      <td>полный</td>\n","      <td>2690000</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Audi</td>\n","      <td>80</td>\n","      <td>90</td>\n","      <td>1994.0</td>\n","      <td>200000.0</td>\n","      <td>4.0</td>\n","      <td>седан</td>\n","      <td>бензин</td>\n","      <td>механика</td>\n","      <td>передний</td>\n","      <td>120000</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Audi</td>\n","      <td>A6</td>\n","      <td>150</td>\n","      <td>1997.0</td>\n","      <td>330000.0</td>\n","      <td>5.0</td>\n","      <td>универсал</td>\n","      <td>бензин</td>\n","      <td>автомат</td>\n","      <td>передний</td>\n","      <td>60000</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Audi</td>\n","      <td>A4</td>\n","      <td>239</td>\n","      <td>2008.0</td>\n","      <td>220000.0</td>\n","      <td>4.0</td>\n","      <td>седан</td>\n","      <td>дизель</td>\n","      <td>автомат</td>\n","      <td>полный</td>\n","      <td>790000</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Audi</td>\n","      <td>Q3</td>\n","      <td>170</td>\n","      <td>2012.0</td>\n","      <td>129000.0</td>\n","      <td>5.0</td>\n","      <td>внедорожник</td>\n","      <td>бензин</td>\n","      <td>робот</td>\n","      <td>полный</td>\n","      <td>1100000</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Audi</td>\n","      <td>Q7</td>\n","      <td>249</td>\n","      <td>2016.0</td>\n","      <td>166812.0</td>\n","      <td>5.0</td>\n","      <td>внедорожник</td>\n","      <td>дизель</td>\n","      <td>автомат</td>\n","      <td>полный</td>\n","      <td>2550000</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Audi</td>\n","      <td>A3</td>\n","      <td>125</td>\n","      <td>2011.0</td>\n","      <td>183000.0</td>\n","      <td>5.0</td>\n","      <td>хетчбэк</td>\n","      <td>бензин</td>\n","      <td>робот</td>\n","      <td>передний</td>\n","      <td>470000</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Audi</td>\n","      <td>Q3</td>\n","      <td>170</td>\n","      <td>2012.0</td>\n","      <td>115000.0</td>\n","      <td>5.0</td>\n","      <td>внедорожник</td>\n","      <td>бензин</td>\n","      <td>робот</td>\n","      <td>полный</td>\n","      <td>1050000</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Audi</td>\n","      <td>A7</td>\n","      <td>204</td>\n","      <td>2010.0</td>\n","      <td>140000.0</td>\n","      <td>5.0</td>\n","      <td>хетчбэк</td>\n","      <td>бензин</td>\n","      <td>робот</td>\n","      <td>полный</td>\n","      <td>1150000</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>Audi</td>\n","      <td>A4</td>\n","      <td>130</td>\n","      <td>2004.0</td>\n","      <td>300000.0</td>\n","      <td>5.0</td>\n","      <td>универсал</td>\n","      <td>дизель</td>\n","      <td>механика</td>\n","      <td>передний</td>\n","      <td>310000</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>Audi</td>\n","      <td>A6</td>\n","      <td>150</td>\n","      <td>2000.0</td>\n","      <td>269312.0</td>\n","      <td>4.0</td>\n","      <td>седан</td>\n","      <td>бензин</td>\n","      <td>механика</td>\n","      <td>передний</td>\n","      <td>245000</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>Audi</td>\n","      <td>A6</td>\n","      <td>125</td>\n","      <td>1998.0</td>\n","      <td>509000.0</td>\n","      <td>4.0</td>\n","      <td>седан</td>\n","      <td>бензин</td>\n","      <td>механика</td>\n","      <td>передний</td>\n","      <td>215000</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>Audi</td>\n","      <td>A6</td>\n","      <td>190</td>\n","      <td>2018.0</td>\n","      <td>15000.0</td>\n","      <td>4.0</td>\n","      <td>седан</td>\n","      <td>бензин</td>\n","      <td>робот</td>\n","      <td>передний</td>\n","      <td>2100000</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>Audi</td>\n","      <td>A6</td>\n","      <td>115</td>\n","      <td>1995.0</td>\n","      <td>500000.0</td>\n","      <td>4.0</td>\n","      <td>седан</td>\n","      <td>бензин</td>\n","      <td>автомат</td>\n","      <td>передний</td>\n","      <td>120000</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>Audi</td>\n","      <td>A4</td>\n","      <td>125</td>\n","      <td>1995.0</td>\n","      <td>100000.0</td>\n","      <td>4.0</td>\n","      <td>седан</td>\n","      <td>бензин</td>\n","      <td>механика</td>\n","      <td>передний</td>\n","      <td>170000</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>Audi</td>\n","      <td>Q3</td>\n","      <td>180</td>\n","      <td>2016.0</td>\n","      <td>49000.0</td>\n","      <td>5.0</td>\n","      <td>внедорожник</td>\n","      <td>бензин</td>\n","      <td>робот</td>\n","      <td>полный</td>\n","      <td>1539000</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>Audi</td>\n","      <td>A6</td>\n","      <td>177</td>\n","      <td>2004.0</td>\n","      <td>300000.0</td>\n","      <td>4.0</td>\n","      <td>седан</td>\n","      <td>бензин</td>\n","      <td>вариатор</td>\n","      <td>передний</td>\n","      <td>460000</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>Audi</td>\n","      <td>A4</td>\n","      <td>120</td>\n","      <td>2008.0</td>\n","      <td>186000.0</td>\n","      <td>4.0</td>\n","      <td>седан</td>\n","      <td>бензин</td>\n","      <td>механика</td>\n","      <td>передний</td>\n","      <td>545000</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>Audi</td>\n","      <td>Q7</td>\n","      <td>326</td>\n","      <td>2008.0</td>\n","      <td>158000.0</td>\n","      <td>5.0</td>\n","      <td>внедорожник</td>\n","      <td>дизель</td>\n","      <td>автомат</td>\n","      <td>полный</td>\n","      <td>875000</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>Audi</td>\n","      <td>A3</td>\n","      <td>125</td>\n","      <td>2011.0</td>\n","      <td>111000.0</td>\n","      <td>5.0</td>\n","      <td>хетчбэк</td>\n","      <td>бензин</td>\n","      <td>механика</td>\n","      <td>передний</td>\n","      <td>447000</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>Audi</td>\n","      <td>A6</td>\n","      <td>180</td>\n","      <td>2012.0</td>\n","      <td>225000.0</td>\n","      <td>4.0</td>\n","      <td>седан</td>\n","      <td>бензин</td>\n","      <td>вариатор</td>\n","      <td>передний</td>\n","      <td>700000</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>Audi</td>\n","      <td>100</td>\n","      <td>133</td>\n","      <td>1991.0</td>\n","      <td>20000.0</td>\n","      <td>4.0</td>\n","      <td>седан</td>\n","      <td>бензин</td>\n","      <td>механика</td>\n","      <td>передний</td>\n","      <td>50000</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>Audi</td>\n","      <td>A4</td>\n","      <td>101</td>\n","      <td>1995.0</td>\n","      <td>391293.0</td>\n","      <td>4.0</td>\n","      <td>седан</td>\n","      <td>бензин</td>\n","      <td>механика</td>\n","      <td>передний</td>\n","      <td>70000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-02260d9e-09ef-4ee8-816f-3a9c35b04c31')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-02260d9e-09ef-4ee8-816f-3a9c35b04c31 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-02260d9e-09ef-4ee8-816f-3a9c35b04c31');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["df.info()"],"metadata":{"id":"WLc6YSPLyD1D","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1656437992353,"user_tz":-180,"elapsed":32,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"c80ddab2-943f-40dc-88ea-a11c9200afcf"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 18473 entries, 0 to 19982\n","Data columns (total 11 columns):\n"," #   Column       Non-Null Count  Dtype  \n","---  ------       --------------  -----  \n"," 0   марка        18473 non-null  object \n"," 1   модель       18473 non-null  object \n"," 2   мощность     18473 non-null  int64  \n"," 3   год          18473 non-null  float64\n"," 4   пробег       18473 non-null  float64\n"," 5   двери        18473 non-null  float64\n"," 6   кузов        18473 non-null  object \n"," 7   топливо      18473 non-null  object \n"," 8   трансмиссия  18473 non-null  object \n"," 9   привод       18473 non-null  object \n"," 10  цена         18473 non-null  int64  \n","dtypes: float64(3), int64(2), object(6)\n","memory usage: 1.7+ MB\n"]}]},{"cell_type":"markdown","source":["наша база \"похудела\" не сильно :)"],"metadata":{"id":"q7ZKihN1ye4E"}},{"cell_type":"code","source":["# export_csv = df.to_csv(r'/content/drive/MyDrive/диплом/Avto.csv', index=None, header=True)"],"metadata":{"id":"uSn2xQyOqyEw"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Кодируем категориальные признаки при помощи метода One Hot Encoding"],"metadata":{"id":"no8JonBV4d7W"}},{"cell_type":"code","source":[" df_ohe = pd.concat([df,  pd.get_dummies(df['марка'], prefix=\"марка\"), \n","                            pd.get_dummies(df['модель'], prefix=\"модель\"), \n","                            pd.get_dummies(df['кузов'], prefix=\"кузов\"), \n","                            pd.get_dummies(df['топливо'], prefix=\"топливо\"), \n","                            pd.get_dummies(df['трансмиссия'], prefix=\"трансмиссия\"), \n","                            pd.get_dummies(df['привод'], prefix=\"привод\")], axis=1)"],"metadata":{"id":"lG_aoMM8ymsy","executionInfo":{"status":"ok","timestamp":1656663934895,"user_tz":-180,"elapsed":300,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["df_ohe.drop(['марка', 'модель', 'кузов', 'топливо', 'трансмиссия', 'привод'], axis=1, inplace=True)"],"metadata":{"id":"sY1a93Bq9FCw","executionInfo":{"status":"ok","timestamp":1656663935325,"user_tz":-180,"elapsed":21,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["df_ohe.head(20)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"UsmSVB697Yzz","executionInfo":{"status":"ok","timestamp":1656663935327,"user_tz":-180,"elapsed":20,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"7a050144-4acc-4861-92a5-a50aeddc9d13"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    мощность     год    пробег  двери     цена  марка_Audi  марка_BMW  \\\n","0        150  2017.0   89000.0    4.0  1490000           1          0   \n","1        170  2012.0  104000.0    5.0   950000           1          0   \n","3        211  2010.0  113043.0    5.0   897000           1          0   \n","4        174  1996.0  460000.0    4.0   200000           1          0   \n","5        150  1995.0  325757.0    4.0   129000           1          0   \n","6        180  2013.0   96341.0    4.0  1090000           1          0   \n","7        177  2006.0  180000.0    4.0   480000           1          0   \n","8        245  2015.0   58669.0    5.0  2690000           1          0   \n","9         90  1994.0  200000.0    4.0   120000           1          0   \n","10       150  1997.0  330000.0    5.0    60000           1          0   \n","11       239  2008.0  220000.0    4.0   790000           1          0   \n","12       170  2012.0  129000.0    5.0  1100000           1          0   \n","13       249  2016.0  166812.0    5.0  2550000           1          0   \n","14       125  2011.0  183000.0    5.0   470000           1          0   \n","15       170  2012.0  115000.0    5.0  1050000           1          0   \n","16       204  2010.0  140000.0    5.0  1150000           1          0   \n","17       130  2004.0  300000.0    5.0   310000           1          0   \n","18       150  2000.0  269312.0    4.0   245000           1          0   \n","19       125  1998.0  509000.0    4.0   215000           1          0   \n","20       190  2018.0   15000.0    4.0  2100000           1          0   \n","\n","    марка_Chery  марка_Chevrolet  марка_Citroen  ...  топливо_гибрид  \\\n","0             0                0              0  ...               0   \n","1             0                0              0  ...               0   \n","3             0                0              0  ...               0   \n","4             0                0              0  ...               0   \n","5             0                0              0  ...               0   \n","6             0                0              0  ...               0   \n","7             0                0              0  ...               0   \n","8             0                0              0  ...               0   \n","9             0                0              0  ...               0   \n","10            0                0              0  ...               0   \n","11            0                0              0  ...               0   \n","12            0                0              0  ...               0   \n","13            0                0              0  ...               0   \n","14            0                0              0  ...               0   \n","15            0                0              0  ...               0   \n","16            0                0              0  ...               0   \n","17            0                0              0  ...               0   \n","18            0                0              0  ...               0   \n","19            0                0              0  ...               0   \n","20            0                0              0  ...               0   \n","\n","    топливо_дизель  топливо_электро  трансмиссия_автомат  \\\n","0                0                0                    0   \n","1                1                0                    0   \n","3                0                0                    0   \n","4                0                0                    0   \n","5                0                0                    0   \n","6                0                0                    0   \n","7                0                0                    0   \n","8                1                0                    0   \n","9                0                0                    0   \n","10               0                0                    1   \n","11               1                0                    1   \n","12               0                0                    0   \n","13               1                0                    1   \n","14               0                0                    0   \n","15               0                0                    0   \n","16               0                0                    0   \n","17               1                0                    0   \n","18               0                0                    0   \n","19               0                0                    0   \n","20               0                0                    0   \n","\n","    трансмиссия_вариатор  трансмиссия_механика  трансмиссия_робот  \\\n","0                      0                     0                  1   \n","1                      0                     0                  1   \n","3                      0                     0                  1   \n","4                      0                     1                  0   \n","5                      0                     1                  0   \n","6                      1                     0                  0   \n","7                      1                     0                  0   \n","8                      0                     0                  1   \n","9                      0                     1                  0   \n","10                     0                     0                  0   \n","11                     0                     0                  0   \n","12                     0                     0                  1   \n","13                     0                     0                  0   \n","14                     0                     0                  1   \n","15                     0                     0                  1   \n","16                     0                     0                  1   \n","17                     0                     1                  0   \n","18                     0                     1                  0   \n","19                     0                     1                  0   \n","20                     0                     0                  1   \n","\n","    привод_задний  привод_передний  привод_полный  \n","0               0                1              0  \n","1               0                0              1  \n","3               0                0              1  \n","4               0                1              0  \n","5               0                1              0  \n","6               0                1              0  \n","7               0                1              0  \n","8               0                0              1  \n","9               0                1              0  \n","10              0                1              0  \n","11              0                0              1  \n","12              0                0              1  \n","13              0                0              1  \n","14              0                1              0  \n","15              0                0              1  \n","16              0                0              1  \n","17              0                1              0  \n","18              0                1              0  \n","19              0                1              0  \n","20              0                1              0  \n","\n","[20 rows x 619 columns]"],"text/html":["\n","  <div id=\"df-769349aa-4f66-457d-8b39-9a91186e7043\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>мощность</th>\n","      <th>год</th>\n","      <th>пробег</th>\n","      <th>двери</th>\n","      <th>цена</th>\n","      <th>марка_Audi</th>\n","      <th>марка_BMW</th>\n","      <th>марка_Chery</th>\n","      <th>марка_Chevrolet</th>\n","      <th>марка_Citroen</th>\n","      <th>...</th>\n","      <th>топливо_гибрид</th>\n","      <th>топливо_дизель</th>\n","      <th>топливо_электро</th>\n","      <th>трансмиссия_автомат</th>\n","      <th>трансмиссия_вариатор</th>\n","      <th>трансмиссия_механика</th>\n","      <th>трансмиссия_робот</th>\n","      <th>привод_задний</th>\n","      <th>привод_передний</th>\n","      <th>привод_полный</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>150</td>\n","      <td>2017.0</td>\n","      <td>89000.0</td>\n","      <td>4.0</td>\n","      <td>1490000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>170</td>\n","      <td>2012.0</td>\n","      <td>104000.0</td>\n","      <td>5.0</td>\n","      <td>950000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>211</td>\n","      <td>2010.0</td>\n","      <td>113043.0</td>\n","      <td>5.0</td>\n","      <td>897000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>174</td>\n","      <td>1996.0</td>\n","      <td>460000.0</td>\n","      <td>4.0</td>\n","      <td>200000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>150</td>\n","      <td>1995.0</td>\n","      <td>325757.0</td>\n","      <td>4.0</td>\n","      <td>129000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>180</td>\n","      <td>2013.0</td>\n","      <td>96341.0</td>\n","      <td>4.0</td>\n","      <td>1090000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>177</td>\n","      <td>2006.0</td>\n","      <td>180000.0</td>\n","      <td>4.0</td>\n","      <td>480000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>245</td>\n","      <td>2015.0</td>\n","      <td>58669.0</td>\n","      <td>5.0</td>\n","      <td>2690000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>90</td>\n","      <td>1994.0</td>\n","      <td>200000.0</td>\n","      <td>4.0</td>\n","      <td>120000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>150</td>\n","      <td>1997.0</td>\n","      <td>330000.0</td>\n","      <td>5.0</td>\n","      <td>60000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>239</td>\n","      <td>2008.0</td>\n","      <td>220000.0</td>\n","      <td>4.0</td>\n","      <td>790000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>170</td>\n","      <td>2012.0</td>\n","      <td>129000.0</td>\n","      <td>5.0</td>\n","      <td>1100000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>249</td>\n","      <td>2016.0</td>\n","      <td>166812.0</td>\n","      <td>5.0</td>\n","      <td>2550000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>125</td>\n","      <td>2011.0</td>\n","      <td>183000.0</td>\n","      <td>5.0</td>\n","      <td>470000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>170</td>\n","      <td>2012.0</td>\n","      <td>115000.0</td>\n","      <td>5.0</td>\n","      <td>1050000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>204</td>\n","      <td>2010.0</td>\n","      <td>140000.0</td>\n","      <td>5.0</td>\n","      <td>1150000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>130</td>\n","      <td>2004.0</td>\n","      <td>300000.0</td>\n","      <td>5.0</td>\n","      <td>310000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>150</td>\n","      <td>2000.0</td>\n","      <td>269312.0</td>\n","      <td>4.0</td>\n","      <td>245000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>125</td>\n","      <td>1998.0</td>\n","      <td>509000.0</td>\n","      <td>4.0</td>\n","      <td>215000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>190</td>\n","      <td>2018.0</td>\n","      <td>15000.0</td>\n","      <td>4.0</td>\n","      <td>2100000</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>20 rows × 619 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-769349aa-4f66-457d-8b39-9a91186e7043')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-769349aa-4f66-457d-8b39-9a91186e7043 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-769349aa-4f66-457d-8b39-9a91186e7043');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["# Создаем выборки для обучения модели\n","\n","xTrain = df_ohe.drop(['цена'], axis=1)\n","yTrain = df_ohe['цена']"],"metadata":{"id":"H9BRc0eP9CF1","executionInfo":{"status":"ok","timestamp":1656663935329,"user_tz":-180,"elapsed":16,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["xTrain.head(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":0},"id":"_CIPO4n1MRSW","executionInfo":{"status":"ok","timestamp":1656663935624,"user_tz":-180,"elapsed":309,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"40837252-7427-44c7-9701-bd2923214001"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    мощность     год    пробег  двери  марка_Audi  марка_BMW  марка_Chery  \\\n","0        150  2017.0   89000.0    4.0           1          0            0   \n","1        170  2012.0  104000.0    5.0           1          0            0   \n","3        211  2010.0  113043.0    5.0           1          0            0   \n","4        174  1996.0  460000.0    4.0           1          0            0   \n","5        150  1995.0  325757.0    4.0           1          0            0   \n","6        180  2013.0   96341.0    4.0           1          0            0   \n","7        177  2006.0  180000.0    4.0           1          0            0   \n","8        245  2015.0   58669.0    5.0           1          0            0   \n","9         90  1994.0  200000.0    4.0           1          0            0   \n","10       150  1997.0  330000.0    5.0           1          0            0   \n","\n","    марка_Chevrolet  марка_Citroen  марка_Daewoo  ...  топливо_гибрид  \\\n","0                 0              0             0  ...               0   \n","1                 0              0             0  ...               0   \n","3                 0              0             0  ...               0   \n","4                 0              0             0  ...               0   \n","5                 0              0             0  ...               0   \n","6                 0              0             0  ...               0   \n","7                 0              0             0  ...               0   \n","8                 0              0             0  ...               0   \n","9                 0              0             0  ...               0   \n","10                0              0             0  ...               0   \n","\n","    топливо_дизель  топливо_электро  трансмиссия_автомат  \\\n","0                0                0                    0   \n","1                1                0                    0   \n","3                0                0                    0   \n","4                0                0                    0   \n","5                0                0                    0   \n","6                0                0                    0   \n","7                0                0                    0   \n","8                1                0                    0   \n","9                0                0                    0   \n","10               0                0                    1   \n","\n","    трансмиссия_вариатор  трансмиссия_механика  трансмиссия_робот  \\\n","0                      0                     0                  1   \n","1                      0                     0                  1   \n","3                      0                     0                  1   \n","4                      0                     1                  0   \n","5                      0                     1                  0   \n","6                      1                     0                  0   \n","7                      1                     0                  0   \n","8                      0                     0                  1   \n","9                      0                     1                  0   \n","10                     0                     0                  0   \n","\n","    привод_задний  привод_передний  привод_полный  \n","0               0                1              0  \n","1               0                0              1  \n","3               0                0              1  \n","4               0                1              0  \n","5               0                1              0  \n","6               0                1              0  \n","7               0                1              0  \n","8               0                0              1  \n","9               0                1              0  \n","10              0                1              0  \n","\n","[10 rows x 618 columns]"],"text/html":["\n","  <div id=\"df-6cf9c619-fd7d-4f2a-a1ae-f3fda34d2af7\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>мощность</th>\n","      <th>год</th>\n","      <th>пробег</th>\n","      <th>двери</th>\n","      <th>марка_Audi</th>\n","      <th>марка_BMW</th>\n","      <th>марка_Chery</th>\n","      <th>марка_Chevrolet</th>\n","      <th>марка_Citroen</th>\n","      <th>марка_Daewoo</th>\n","      <th>...</th>\n","      <th>топливо_гибрид</th>\n","      <th>топливо_дизель</th>\n","      <th>топливо_электро</th>\n","      <th>трансмиссия_автомат</th>\n","      <th>трансмиссия_вариатор</th>\n","      <th>трансмиссия_механика</th>\n","      <th>трансмиссия_робот</th>\n","      <th>привод_задний</th>\n","      <th>привод_передний</th>\n","      <th>привод_полный</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>150</td>\n","      <td>2017.0</td>\n","      <td>89000.0</td>\n","      <td>4.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>170</td>\n","      <td>2012.0</td>\n","      <td>104000.0</td>\n","      <td>5.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>211</td>\n","      <td>2010.0</td>\n","      <td>113043.0</td>\n","      <td>5.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>174</td>\n","      <td>1996.0</td>\n","      <td>460000.0</td>\n","      <td>4.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>150</td>\n","      <td>1995.0</td>\n","      <td>325757.0</td>\n","      <td>4.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>180</td>\n","      <td>2013.0</td>\n","      <td>96341.0</td>\n","      <td>4.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>177</td>\n","      <td>2006.0</td>\n","      <td>180000.0</td>\n","      <td>4.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>245</td>\n","      <td>2015.0</td>\n","      <td>58669.0</td>\n","      <td>5.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>90</td>\n","      <td>1994.0</td>\n","      <td>200000.0</td>\n","      <td>4.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>150</td>\n","      <td>1997.0</td>\n","      <td>330000.0</td>\n","      <td>5.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>10 rows × 618 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6cf9c619-fd7d-4f2a-a1ae-f3fda34d2af7')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6cf9c619-fd7d-4f2a-a1ae-f3fda34d2af7 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6cf9c619-fd7d-4f2a-a1ae-f3fda34d2af7');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["yTrain.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hLMvR0c5M2rQ","executionInfo":{"status":"ok","timestamp":1656663935625,"user_tz":-180,"elapsed":8,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"c1dc25cb-0a07-41da-d94a-141be6e7a995"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    1490000\n","1     950000\n","3     897000\n","4     200000\n","5     129000\n","Name: цена, dtype: int64"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["# Необходимо создать тестовые выборки при помощи метода train_test_split\n","# Разобьем данные 80%(обучающая) на 20%(тестовая) и перемешаем их.\n","\n","xTrain_new, xVal, yTrain_new, yVal = train_test_split(xTrain, yTrain, test_size=0.2, shuffle=True)"],"metadata":{"id":"nkBNtfu5M6xw","executionInfo":{"status":"ok","timestamp":1656663935625,"user_tz":-180,"elapsed":7,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["print('xTrain_new', xTrain_new.shape)\n","print('yTrain_new', yTrain_new.shape)\n","print('xVal', xVal.shape)\n","print('yVal', yVal.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"w41IHyktOfS3","executionInfo":{"status":"ok","timestamp":1656663935626,"user_tz":-180,"elapsed":8,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"3cc31d55-3b0f-4002-9e17-55b4a5f7b0b1"},"execution_count":16,"outputs":[{"output_type":"stream","name":"stdout","text":["xTrain_new (14778, 618)\n","yTrain_new (14778,)\n","xVal (3695, 618)\n","yVal (3695,)\n"]}]},{"cell_type":"markdown","source":["# Функции"],"metadata":{"id":"VzUSsuz_m4DQ"}},{"cell_type":"code","source":["''' \n","MSE - среднеквадратичная ошибка\n","R2 - это один из показателей оценки эффективности моделей машинного обучения на основе регрессии. \n"," Она также известна как коэффициент детерминации.\n"," Если значение оценки R в квадрате равно 1, это означает, что модель идеальна, а если ее значение равно 0, \n"," это означает, что модель будет плохо работать с неизвестным набором данных. Это также означает, \n"," что чем ближе значение оценки R в квадрате к 1, тем точнее обучается модель.\n","'''\n","def MSE(y_true,y_pred):\n","    mse = mean_squared_error(y_true, y_pred)\n","    print('MSE: %2.3f' % mse)\n","    return mse\n"," \n","def R2(y_true,y_pred):    \n","    r2 = r2_score(y_true, y_pred)\n","    print('R2: %2.3f' % r2)     \n","    return r2"],"metadata":{"id":"J8vSEx0dm83B","executionInfo":{"status":"ok","timestamp":1656663937368,"user_tz":-180,"elapsed":10,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["# Функция оценки модели\n","def estimation_model(y_real,predict_inverse):\n","    delta = y_real - predict_inverse\n","    abs_delta = abs(delta)\n","    mean_delta = sum(abs_delta)/len(abs_delta)\n","    mean_price = sum(y_real)/len(y_real)\n","    print(\"Средняя ошибка: \", round(mean_delta), \"руб.\")\n","    print(\"Средняя цена: \", round(mean_price), \"руб.\")\n","    print(\"Процент ошибки: \", round(100*mean_delta / mean_price), \"%\", sep=\"\")\n","    print(\"Процент точности: \", 100-round(100*mean_delta / mean_price), \"%\", sep=\"\")\n","    "],"metadata":{"id":"2LmI-QzouIIS","executionInfo":{"status":"ok","timestamp":1656663937370,"user_tz":-180,"elapsed":10,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["# Создаём словарь поле - его индекс\n","def create_dict(s):\n","  ret = {}                          \n","  for id, name in enumerate(s):    \n","    ret.update({name: id})         \n","  return ret\n","\n","# Функция преобразования в one hot encoding\n","def to_ohe(value, d):\n","  arr = [0] * len(d)\n","  arr[d[value]] = 1\n","  return arr"],"metadata":{"id":"dUN-puibuJPq","executionInfo":{"status":"ok","timestamp":1656663937372,"user_tz":-180,"elapsed":10,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}}},"execution_count":19,"outputs":[]},{"cell_type":"markdown","source":["# Применим два метода для построения моделей, решающих задачу регрессии:  \n","\n","*  Линейная регрессия linear regression\n","*  Лес решающих деревьев random forest\n","\n"],"metadata":{"id":"0hnOebvyan1-"}},{"cell_type":"markdown","source":["Метод linear regression"],"metadata":{"id":"EpND2gw7l3v1"}},{"cell_type":"code","source":["linear_regression_model = linear_model.LinearRegression()\n","linear_regression_model.fit(xTrain_new, yTrain_new)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UqI-qJroS97p","executionInfo":{"status":"ok","timestamp":1656437995704,"user_tz":-180,"elapsed":2086,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"3e42b419-2f96-4227-ce45-357a6ccacc84"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LinearRegression()"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["test_predictions_linear = linear_regression_model.predict(xVal)"],"metadata":{"id":"vtpBS4-mTV8k"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plt.figure(figsize=(7, 7))\n","plt.scatter(yVal, test_predictions_linear) # рисуем точки, соответствущие парам настоящее значение - прогноз\n","plt.plot([0, max(yVal)], [0, max(test_predictions_linear)])  # рисуем прямую, на которой предсказания и настоящие значения совпадают\n","plt.xlabel('Настоящая цена', fontsize=20)\n","plt.ylabel('Предсказанная цена', fontsize=20);"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":462},"id":"dwanrCDNT_HT","executionInfo":{"status":"ok","timestamp":1656437996359,"user_tz":-180,"elapsed":662,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"f99f21e2-bc91-4d86-d793-645b25018e4c"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 504x504 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["MSE(yVal, test_predictions_linear); R2(yVal, test_predictions_linear);"],"metadata":{"id":"Vd8MmMGXHlUV","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1656437996360,"user_tz":-180,"elapsed":17,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"deddf090-b102-4f98-bbcc-9e71a477969f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["MSE: 375754899270494080.000\n","R2: -2149784.456\n"]}]},{"cell_type":"markdown","source":["Метод random forest"],"metadata":{"id":"8ehOoBNXluzB"}},{"cell_type":"code","source":["random_forest_model = ensemble.RandomForestRegressor(random_state=123)\n","random_forest_model.fit(xTrain_new, yTrain_new)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aFOO0ZhZltGQ","executionInfo":{"status":"ok","timestamp":1656438035793,"user_tz":-180,"elapsed":39441,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"04e08135-13f6-4982-a237-cc199f91c9a1"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["RandomForestRegressor(random_state=123)"]},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["test_predictions_random_forest = random_forest_model.predict(xVal)"],"metadata":{"id":"8hQKVLSdmpv7"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plt.figure(figsize=(7, 7))\n","plt.scatter(yVal, test_predictions_random_forest) # рисуем точки, соответствущие парам настоящее значение - прогноз\n","plt.plot([0, max(yVal)], [0, max(test_predictions_random_forest)]) # рисуем прямую, на которой предсказания и настоящие значения совпадают\n","plt.xlabel('Настоящая цена', fontsize=20)\n","plt.ylabel('Предсказанная цена', fontsize=20);"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":462},"id":"FlZIwoJSXPZc","executionInfo":{"status":"ok","timestamp":1656438036709,"user_tz":-180,"elapsed":925,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"a5a5cdfe-8601-4442-b5c4-6ef4a9a08d97"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 504x504 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["MSE(yVal, test_predictions_random_forest); R2(yVal, test_predictions_random_forest);"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EYdqTAobl9Pl","executionInfo":{"status":"ok","timestamp":1656438036709,"user_tz":-180,"elapsed":25,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"e068878e-2131-4cec-888e-047ee976d6e2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["MSE: 11894579290.998\n","R2: 0.932\n"]}]},{"cell_type":"code","source":["d = {'реальная цена' : list(yVal),\n","     'предсказанная цена' : pd.Series(test_predictions_random_forest)\n","    }\n","pd.DataFrame(d).head(7)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":269},"id":"24FqfDKhoYHC","executionInfo":{"status":"ok","timestamp":1656438036710,"user_tz":-180,"elapsed":17,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"7530f211-d41c-49c6-9593-09a1969b3f2c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   реальная цена  предсказанная цена\n","0         460000           492190.00\n","1         690000           425320.00\n","2          96000            60580.00\n","3         265000           326449.89\n","4         150000           275370.00\n","5          95000           102440.00\n","6         420000           462150.00"],"text/html":["\n","  <div id=\"df-e4dd4465-e401-4fb8-83d8-8259b2181045\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>реальная цена</th>\n","      <th>предсказанная цена</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>460000</td>\n","      <td>492190.00</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>690000</td>\n","      <td>425320.00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>96000</td>\n","      <td>60580.00</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>265000</td>\n","      <td>326449.89</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>150000</td>\n","      <td>275370.00</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>95000</td>\n","      <td>102440.00</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>420000</td>\n","      <td>462150.00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e4dd4465-e401-4fb8-83d8-8259b2181045')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e4dd4465-e401-4fb8-83d8-8259b2181045 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e4dd4465-e401-4fb8-83d8-8259b2181045');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["estimation_model(yVal, test_predictions_random_forest)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IfC_8QX9jOd5","executionInfo":{"status":"ok","timestamp":1656438036710,"user_tz":-180,"elapsed":15,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"d99b39f0-cebd-4ce1-b58d-2c3fb18f039b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Средняя ошибка:  64146 руб.\n","Средняя цена:  466912 руб.\n","Процент ошибки: 14%\n","Процент точности: 86%\n"]}]},{"cell_type":"markdown","source":["Вывод: Метод linear regression оказался совсем не эффективным в данном случая в отличие от метода random forest. "],"metadata":{"id":"Ij-Biy8IpmrH"}},{"cell_type":"markdown","source":["# Простая нейронная сеть"],"metadata":{"id":"sVVLu8IabXQr"}},{"cell_type":"code","source":["model = Sequential()\n","model.add(Dense(300, activation = 'relu', input_shape = xTrain_new.shape[1:]))\n","model.add(Dense(100, activation = 'relu'))\n","model.add(Dense(1))\n","model.compile(optimizer = 'adam', loss = 'mse')"],"metadata":{"id":"0DS81JmvbgTO","executionInfo":{"status":"ok","timestamp":1656663955276,"user_tz":-180,"elapsed":376,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["plot_model(model, dpi=80, show_shapes=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":355},"id":"7PQudPRW29va","executionInfo":{"status":"ok","timestamp":1656664640374,"user_tz":-180,"elapsed":339,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"055b83df-dcc4-4587-93d3-700ad7b71171"},"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<IPython.core.display.Image object>"],"image/png":"\n"},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["model.fit(xTrain_new, yTrain_new, epochs = 100, batch_size = 32, validation_data=(xVal, yVal), verbose=1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-X6QEA3M2806","executionInfo":{"status":"ok","timestamp":1656664926986,"user_tz":-180,"elapsed":215594,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"0e62941e-b173-413f-91ea-f013640d92a9"},"execution_count":27,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","462/462 [==============================] - 3s 5ms/step - loss: 259990568960.0000 - val_loss: 213435088896.0000\n","Epoch 2/100\n","462/462 [==============================] - 2s 5ms/step - loss: 176796663808.0000 - val_loss: 153245679616.0000\n","Epoch 3/100\n","462/462 [==============================] - 2s 4ms/step - loss: 156722331648.0000 - val_loss: 151972151296.0000\n","Epoch 4/100\n","462/462 [==============================] - 2s 4ms/step - loss: 153020448768.0000 - val_loss: 145324933120.0000\n","Epoch 5/100\n","462/462 [==============================] - 2s 4ms/step - loss: 149374943232.0000 - val_loss: 142223327232.0000\n","Epoch 6/100\n","462/462 [==============================] - 2s 4ms/step - loss: 145308467200.0000 - val_loss: 137468985344.0000\n","Epoch 7/100\n","462/462 [==============================] - 2s 4ms/step - loss: 139712872448.0000 - val_loss: 132399644672.0000\n","Epoch 8/100\n","462/462 [==============================] - 3s 6ms/step - loss: 133448974336.0000 - val_loss: 124700393472.0000\n","Epoch 9/100\n","462/462 [==============================] - 2s 4ms/step - loss: 124196495360.0000 - val_loss: 122343972864.0000\n","Epoch 10/100\n","462/462 [==============================] - 2s 4ms/step - loss: 113206894592.0000 - val_loss: 101527076864.0000\n","Epoch 11/100\n","462/462 [==============================] - 2s 4ms/step - loss: 101037834240.0000 - val_loss: 122990436352.0000\n","Epoch 12/100\n","462/462 [==============================] - 2s 4ms/step - loss: 97952980992.0000 - val_loss: 91786395648.0000\n","Epoch 13/100\n","462/462 [==============================] - 2s 4ms/step - loss: 94132748288.0000 - val_loss: 107402297344.0000\n","Epoch 14/100\n","462/462 [==============================] - 2s 4ms/step - loss: 92576538624.0000 - val_loss: 112576552960.0000\n","Epoch 15/100\n","462/462 [==============================] - 2s 4ms/step - loss: 91996045312.0000 - val_loss: 95615967232.0000\n","Epoch 16/100\n","462/462 [==============================] - 2s 4ms/step - loss: 88694005760.0000 - val_loss: 88389476352.0000\n","Epoch 17/100\n","462/462 [==============================] - 2s 4ms/step - loss: 88235270144.0000 - val_loss: 83238846464.0000\n","Epoch 18/100\n","462/462 [==============================] - 2s 4ms/step - loss: 85792956416.0000 - val_loss: 89552379904.0000\n","Epoch 19/100\n","462/462 [==============================] - 2s 4ms/step - loss: 84725350400.0000 - val_loss: 87191158784.0000\n","Epoch 20/100\n","462/462 [==============================] - 2s 4ms/step - loss: 86576922624.0000 - val_loss: 88081301504.0000\n","Epoch 21/100\n","462/462 [==============================] - 2s 4ms/step - loss: 84708368384.0000 - val_loss: 82188271616.0000\n","Epoch 22/100\n","462/462 [==============================] - 2s 4ms/step - loss: 83567607808.0000 - val_loss: 81606279168.0000\n","Epoch 23/100\n","462/462 [==============================] - 2s 4ms/step - loss: 83552198656.0000 - val_loss: 84661542912.0000\n","Epoch 24/100\n","462/462 [==============================] - 2s 4ms/step - loss: 82883231744.0000 - val_loss: 79981281280.0000\n","Epoch 25/100\n","462/462 [==============================] - 2s 4ms/step - loss: 81898332160.0000 - val_loss: 81471971328.0000\n","Epoch 26/100\n","462/462 [==============================] - 2s 4ms/step - loss: 81733410816.0000 - val_loss: 85076443136.0000\n","Epoch 27/100\n","462/462 [==============================] - 3s 6ms/step - loss: 82516959232.0000 - val_loss: 81367015424.0000\n","Epoch 28/100\n","462/462 [==============================] - 2s 5ms/step - loss: 81603813376.0000 - val_loss: 84883447808.0000\n","Epoch 29/100\n","462/462 [==============================] - 2s 4ms/step - loss: 82494898176.0000 - val_loss: 81636573184.0000\n","Epoch 30/100\n","462/462 [==============================] - 2s 5ms/step - loss: 81199366144.0000 - val_loss: 85032796160.0000\n","Epoch 31/100\n","462/462 [==============================] - 2s 5ms/step - loss: 80258891776.0000 - val_loss: 80046620672.0000\n","Epoch 32/100\n","462/462 [==============================] - 2s 4ms/step - loss: 81232535552.0000 - val_loss: 78143864832.0000\n","Epoch 33/100\n","462/462 [==============================] - 2s 5ms/step - loss: 80667746304.0000 - val_loss: 83815628800.0000\n","Epoch 34/100\n","462/462 [==============================] - 2s 4ms/step - loss: 81216536576.0000 - val_loss: 82347548672.0000\n","Epoch 35/100\n","462/462 [==============================] - 2s 4ms/step - loss: 79591317504.0000 - val_loss: 75052253184.0000\n","Epoch 36/100\n","462/462 [==============================] - 2s 5ms/step - loss: 80010469376.0000 - val_loss: 80961855488.0000\n","Epoch 37/100\n","462/462 [==============================] - 3s 7ms/step - loss: 78635491328.0000 - val_loss: 84998176768.0000\n","Epoch 38/100\n","462/462 [==============================] - 2s 5ms/step - loss: 80888979456.0000 - val_loss: 78342488064.0000\n","Epoch 39/100\n","462/462 [==============================] - 2s 5ms/step - loss: 78861819904.0000 - val_loss: 83369549824.0000\n","Epoch 40/100\n","462/462 [==============================] - 2s 4ms/step - loss: 78319468544.0000 - val_loss: 73333006336.0000\n","Epoch 41/100\n","462/462 [==============================] - 2s 5ms/step - loss: 78506991616.0000 - val_loss: 74926448640.0000\n","Epoch 42/100\n","462/462 [==============================] - 2s 5ms/step - loss: 77995556864.0000 - val_loss: 76394815488.0000\n","Epoch 43/100\n","462/462 [==============================] - 2s 4ms/step - loss: 78317723648.0000 - val_loss: 74908884992.0000\n","Epoch 44/100\n","462/462 [==============================] - 2s 5ms/step - loss: 78514438144.0000 - val_loss: 71986528256.0000\n","Epoch 45/100\n","462/462 [==============================] - 2s 5ms/step - loss: 79651938304.0000 - val_loss: 77692051456.0000\n","Epoch 46/100\n","462/462 [==============================] - 2s 5ms/step - loss: 78219427840.0000 - val_loss: 73261842432.0000\n","Epoch 47/100\n","462/462 [==============================] - 2s 4ms/step - loss: 77977288704.0000 - val_loss: 83233431552.0000\n","Epoch 48/100\n","462/462 [==============================] - 2s 4ms/step - loss: 80317513728.0000 - val_loss: 74631864320.0000\n","Epoch 49/100\n","462/462 [==============================] - 2s 4ms/step - loss: 77348773888.0000 - val_loss: 81554735104.0000\n","Epoch 50/100\n","462/462 [==============================] - 2s 4ms/step - loss: 77735657472.0000 - val_loss: 72163778560.0000\n","Epoch 51/100\n","462/462 [==============================] - 2s 4ms/step - loss: 76810575872.0000 - val_loss: 78607720448.0000\n","Epoch 52/100\n","462/462 [==============================] - 2s 4ms/step - loss: 77776986112.0000 - val_loss: 75682119680.0000\n","Epoch 53/100\n","462/462 [==============================] - 2s 4ms/step - loss: 77245562880.0000 - val_loss: 74634035200.0000\n","Epoch 54/100\n","462/462 [==============================] - 2s 5ms/step - loss: 78331592704.0000 - val_loss: 72196169728.0000\n","Epoch 55/100\n","462/462 [==============================] - 2s 4ms/step - loss: 77145530368.0000 - val_loss: 72383905792.0000\n","Epoch 56/100\n","462/462 [==============================] - 2s 4ms/step - loss: 76552880128.0000 - val_loss: 70794797056.0000\n","Epoch 57/100\n","462/462 [==============================] - 2s 5ms/step - loss: 76717023232.0000 - val_loss: 74964697088.0000\n","Epoch 58/100\n","462/462 [==============================] - 2s 5ms/step - loss: 77886922752.0000 - val_loss: 71459774464.0000\n","Epoch 59/100\n","462/462 [==============================] - 3s 6ms/step - loss: 76356100096.0000 - val_loss: 74919452672.0000\n","Epoch 60/100\n","462/462 [==============================] - 2s 4ms/step - loss: 76054577152.0000 - val_loss: 71180115968.0000\n","Epoch 61/100\n","462/462 [==============================] - 2s 4ms/step - loss: 75989852160.0000 - val_loss: 83864748032.0000\n","Epoch 62/100\n","462/462 [==============================] - 2s 5ms/step - loss: 76925829120.0000 - val_loss: 72507760640.0000\n","Epoch 63/100\n","462/462 [==============================] - 2s 5ms/step - loss: 75777114112.0000 - val_loss: 74001391616.0000\n","Epoch 64/100\n","462/462 [==============================] - 2s 4ms/step - loss: 75593277440.0000 - val_loss: 71690248192.0000\n","Epoch 65/100\n","462/462 [==============================] - 2s 4ms/step - loss: 75954618368.0000 - val_loss: 72891252736.0000\n","Epoch 66/100\n","462/462 [==============================] - 2s 4ms/step - loss: 76775718912.0000 - val_loss: 73132613632.0000\n","Epoch 67/100\n","462/462 [==============================] - 2s 4ms/step - loss: 75211063296.0000 - val_loss: 69393547264.0000\n","Epoch 68/100\n","462/462 [==============================] - 2s 4ms/step - loss: 75250794496.0000 - val_loss: 76691062784.0000\n","Epoch 69/100\n","462/462 [==============================] - 2s 4ms/step - loss: 75733852160.0000 - val_loss: 72083505152.0000\n","Epoch 70/100\n","462/462 [==============================] - 2s 5ms/step - loss: 75243126784.0000 - val_loss: 70412558336.0000\n","Epoch 71/100\n","462/462 [==============================] - 2s 4ms/step - loss: 75710865408.0000 - val_loss: 71138983936.0000\n","Epoch 72/100\n","462/462 [==============================] - 2s 5ms/step - loss: 75248189440.0000 - val_loss: 72155267072.0000\n","Epoch 73/100\n","462/462 [==============================] - 3s 6ms/step - loss: 75485609984.0000 - val_loss: 69690204160.0000\n","Epoch 74/100\n","462/462 [==============================] - 2s 5ms/step - loss: 75724562432.0000 - val_loss: 70147579904.0000\n","Epoch 75/100\n","462/462 [==============================] - 3s 6ms/step - loss: 76079251456.0000 - val_loss: 68185030656.0000\n","Epoch 76/100\n","462/462 [==============================] - 2s 5ms/step - loss: 74837458944.0000 - val_loss: 73518292992.0000\n","Epoch 77/100\n","462/462 [==============================] - 2s 5ms/step - loss: 75096219648.0000 - val_loss: 68744609792.0000\n","Epoch 78/100\n","462/462 [==============================] - 2s 5ms/step - loss: 75419754496.0000 - val_loss: 69767880704.0000\n","Epoch 79/100\n","462/462 [==============================] - 2s 4ms/step - loss: 75036704768.0000 - val_loss: 76541001728.0000\n","Epoch 80/100\n","462/462 [==============================] - 2s 5ms/step - loss: 74170515456.0000 - val_loss: 80649789440.0000\n","Epoch 81/100\n","462/462 [==============================] - 2s 5ms/step - loss: 73517547520.0000 - val_loss: 68718936064.0000\n","Epoch 82/100\n","462/462 [==============================] - 2s 5ms/step - loss: 76258230272.0000 - val_loss: 73133195264.0000\n","Epoch 83/100\n","462/462 [==============================] - 2s 5ms/step - loss: 74627457024.0000 - val_loss: 70200082432.0000\n","Epoch 84/100\n","462/462 [==============================] - 2s 4ms/step - loss: 74750492672.0000 - val_loss: 74393395200.0000\n","Epoch 85/100\n","462/462 [==============================] - 2s 5ms/step - loss: 73799065600.0000 - val_loss: 68747583488.0000\n","Epoch 86/100\n","462/462 [==============================] - 2s 5ms/step - loss: 73484296192.0000 - val_loss: 70844301312.0000\n","Epoch 87/100\n","462/462 [==============================] - 2s 5ms/step - loss: 74632216576.0000 - val_loss: 72107360256.0000\n","Epoch 88/100\n","462/462 [==============================] - 2s 5ms/step - loss: 75500150784.0000 - val_loss: 71473029120.0000\n","Epoch 89/100\n","462/462 [==============================] - 2s 5ms/step - loss: 73521504256.0000 - val_loss: 71726694400.0000\n","Epoch 90/100\n","462/462 [==============================] - 3s 6ms/step - loss: 73761816576.0000 - val_loss: 76362383360.0000\n","Epoch 91/100\n","462/462 [==============================] - 3s 5ms/step - loss: 73291497472.0000 - val_loss: 68757602304.0000\n","Epoch 92/100\n","462/462 [==============================] - 2s 5ms/step - loss: 73887842304.0000 - val_loss: 71195353088.0000\n","Epoch 93/100\n","462/462 [==============================] - 2s 5ms/step - loss: 73952944128.0000 - val_loss: 68969234432.0000\n","Epoch 94/100\n","462/462 [==============================] - 3s 5ms/step - loss: 73438445568.0000 - val_loss: 67773820928.0000\n","Epoch 95/100\n","462/462 [==============================] - 3s 6ms/step - loss: 73156149248.0000 - val_loss: 68354441216.0000\n","Epoch 96/100\n","462/462 [==============================] - 2s 5ms/step - loss: 73674760192.0000 - val_loss: 69361590272.0000\n","Epoch 97/100\n","462/462 [==============================] - 2s 5ms/step - loss: 72399486976.0000 - val_loss: 67127652352.0000\n","Epoch 98/100\n","462/462 [==============================] - 2s 5ms/step - loss: 73896550400.0000 - val_loss: 73414221824.0000\n","Epoch 99/100\n","462/462 [==============================] - 2s 5ms/step - loss: 73878495232.0000 - val_loss: 69400166400.0000\n","Epoch 100/100\n","462/462 [==============================] - 2s 5ms/step - loss: 72593981440.0000 - val_loss: 69117427712.0000\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7f9a49f65dd0>"]},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["model_predict = model.predict(xVal)"],"metadata":{"id":"88fK7xB0_53-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["plt.figure(figsize=(7, 7))\n","plt.scatter(yVal, model_predict) # рисуем точки, соответствущие парам настоящее значение - прогноз\n","plt.plot([0, max(yVal)], [0, max(model_predict)])  # рисуем прямую, на которой предсказания и настоящие значения совпадают\n","plt.xlabel('Настоящая цена', fontsize=20)\n","plt.ylabel('Предсказанная цена', fontsize=20);"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":517},"id":"YK1c7p6hAJGK","executionInfo":{"status":"ok","timestamp":1656438239601,"user_tz":-180,"elapsed":792,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"a9c807a0-9e7e-4186-e0c1-684333a8065f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/numpy/core/shape_base.py:65: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.\n","  ary = asanyarray(ary)\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 504x504 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["MSE(yVal, model_predict); R2(yVal, model_predict);"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mnJE-4a0AheB","executionInfo":{"status":"ok","timestamp":1656438239601,"user_tz":-180,"elapsed":5,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"8ef09d51-c1df-4d38-8ba5-440bb7a59d94"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["MSE: 62465748713.705\n","R2: 0.643\n"]}]},{"cell_type":"code","source":["# Изменим модель, добавив слои: Dense, batchnormalization и dropout\n","# Применим функцию активации Linear на выходном слое\n","\n","model2 = Sequential()\n","model2.add(Dense(300, activation = 'relu', input_shape = xTrain_new.shape[1:]))\n","model2.add(BatchNormalization())\n","model2.add(Dropout(0.3))\n","model2.add(Dense(50, activation = 'relu'))\n","model2.add(BatchNormalization())\n","model2.add(Dropout(0.2))\n","model2.add(Dense(100, activation = 'relu'))\n","model2.add(Dense(1, activation = 'linear'))\n","model2.compile(optimizer = 'adam', loss = 'mse', metrics = ['mae'])\n","\n","model2.fit(xTrain_new, yTrain_new, epochs = 100, batch_size = 32, validation_data=(xVal, yVal), verbose=1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UorfAicmEWAG","executionInfo":{"status":"ok","timestamp":1656438491273,"user_tz":-180,"elapsed":251674,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"01c0b510-5ae3-4a6e-c164-10ccff73a9ea"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","462/462 [==============================] - 4s 6ms/step - loss: 396343738368.0000 - mae: 467705.2188 - val_loss: 383245844480.0000 - val_mae: 456709.2500\n","Epoch 2/100\n","462/462 [==============================] - 2s 5ms/step - loss: 386531917824.0000 - mae: 458316.2500 - val_loss: 346785120256.0000 - val_mae: 419492.1875\n","Epoch 3/100\n","462/462 [==============================] - 2s 5ms/step - loss: 354236465152.0000 - mae: 426550.6562 - val_loss: 348393209856.0000 - val_mae: 426955.2188\n","Epoch 4/100\n","462/462 [==============================] - 2s 5ms/step - loss: 303963013120.0000 - mae: 377031.1562 - val_loss: 214786998272.0000 - val_mae: 288223.6562\n","Epoch 5/100\n","462/462 [==============================] - 3s 7ms/step - loss: 249940197376.0000 - mae: 326253.2500 - val_loss: 211994820608.0000 - val_mae: 294317.7500\n","Epoch 6/100\n","462/462 [==============================] - 3s 7ms/step - loss: 208726786048.0000 - mae: 291501.4375 - val_loss: 171712364544.0000 - val_mae: 269437.3125\n","Epoch 7/100\n","462/462 [==============================] - 2s 5ms/step - loss: 186629210112.0000 - mae: 281102.9688 - val_loss: 167434829824.0000 - val_mae: 268930.7188\n","Epoch 8/100\n","462/462 [==============================] - 2s 5ms/step - loss: 178908102656.0000 - mae: 281544.7500 - val_loss: 160443039744.0000 - val_mae: 271368.0312\n","Epoch 9/100\n","462/462 [==============================] - 2s 5ms/step - loss: 168954347520.0000 - mae: 277096.5938 - val_loss: 163783262208.0000 - val_mae: 305646.5625\n","Epoch 10/100\n","462/462 [==============================] - 2s 5ms/step - loss: 135736836096.0000 - mae: 243131.1406 - val_loss: 126727970816.0000 - val_mae: 214925.8906\n","Epoch 11/100\n","462/462 [==============================] - 2s 5ms/step - loss: 172554928128.0000 - mae: 280325.2188 - val_loss: 226163212288.0000 - val_mae: 399530.9688\n","Epoch 12/100\n","462/462 [==============================] - 2s 5ms/step - loss: 177488592896.0000 - mae: 289285.9688 - val_loss: 149485780992.0000 - val_mae: 262617.4688\n","Epoch 13/100\n","462/462 [==============================] - 2s 5ms/step - loss: 134999457792.0000 - mae: 239590.4844 - val_loss: 122755235840.0000 - val_mae: 213346.1250\n","Epoch 14/100\n","462/462 [==============================] - 3s 5ms/step - loss: 122702962688.0000 - mae: 227607.1562 - val_loss: 94512136192.0000 - val_mae: 201311.0156\n","Epoch 15/100\n","462/462 [==============================] - 2s 5ms/step - loss: 127642763264.0000 - mae: 232851.8281 - val_loss: 106467696640.0000 - val_mae: 204761.2656\n","Epoch 16/100\n","462/462 [==============================] - 3s 5ms/step - loss: 125173514240.0000 - mae: 229262.3594 - val_loss: 238284931072.0000 - val_mae: 427372.4375\n","Epoch 17/100\n","462/462 [==============================] - 2s 5ms/step - loss: 183324737536.0000 - mae: 300727.1875 - val_loss: 185662046208.0000 - val_mae: 320747.1250\n","Epoch 18/100\n","462/462 [==============================] - 2s 5ms/step - loss: 180101595136.0000 - mae: 293053.3125 - val_loss: 235531911168.0000 - val_mae: 301826.8438\n","Epoch 19/100\n","462/462 [==============================] - 2s 5ms/step - loss: 180479459328.0000 - mae: 295358.9688 - val_loss: 233357410304.0000 - val_mae: 309721.2812\n","Epoch 20/100\n","462/462 [==============================] - 2s 5ms/step - loss: 180103315456.0000 - mae: 296321.4375 - val_loss: 211350634496.0000 - val_mae: 306129.1250\n","Epoch 21/100\n","462/462 [==============================] - 2s 5ms/step - loss: 179972325376.0000 - mae: 295236.4375 - val_loss: 267599855616.0000 - val_mae: 309758.6875\n","Epoch 22/100\n","462/462 [==============================] - 2s 5ms/step - loss: 179718209536.0000 - mae: 295525.1250 - val_loss: 297354657792.0000 - val_mae: 309011.5312\n","Epoch 23/100\n","462/462 [==============================] - 3s 6ms/step - loss: 179938476032.0000 - mae: 296284.3125 - val_loss: 335153790976.0000 - val_mae: 311915.2500\n","Epoch 24/100\n","462/462 [==============================] - 3s 5ms/step - loss: 179423756288.0000 - mae: 295028.9062 - val_loss: 249327828992.0000 - val_mae: 305578.0938\n","Epoch 25/100\n","462/462 [==============================] - 2s 5ms/step - loss: 179420217344.0000 - mae: 295480.3438 - val_loss: 258876538880.0000 - val_mae: 306478.9688\n","Epoch 26/100\n","462/462 [==============================] - 2s 5ms/step - loss: 179410812928.0000 - mae: 294883.6562 - val_loss: 308067237888.0000 - val_mae: 307584.9062\n","Epoch 27/100\n","462/462 [==============================] - 2s 5ms/step - loss: 179317948416.0000 - mae: 295590.4062 - val_loss: 204442320896.0000 - val_mae: 301086.5312\n","Epoch 28/100\n","462/462 [==============================] - 3s 6ms/step - loss: 179314884608.0000 - mae: 294896.8750 - val_loss: 218793082880.0000 - val_mae: 299389.6875\n","Epoch 29/100\n","462/462 [==============================] - 2s 5ms/step - loss: 179646038016.0000 - mae: 295338.0000 - val_loss: 214719856640.0000 - val_mae: 304637.1250\n","Epoch 30/100\n","462/462 [==============================] - 2s 5ms/step - loss: 179937017856.0000 - mae: 295698.7812 - val_loss: 215599824896.0000 - val_mae: 305918.3125\n","Epoch 31/100\n","462/462 [==============================] - 2s 5ms/step - loss: 179661881344.0000 - mae: 295460.9375 - val_loss: 285042737152.0000 - val_mae: 310194.4062\n","Epoch 32/100\n","462/462 [==============================] - 2s 5ms/step - loss: 179572588544.0000 - mae: 295459.1562 - val_loss: 255358369792.0000 - val_mae: 309349.5625\n","Epoch 33/100\n","462/462 [==============================] - 2s 5ms/step - loss: 179455557632.0000 - mae: 294345.0625 - val_loss: 277185953792.0000 - val_mae: 311553.5312\n","Epoch 34/100\n","462/462 [==============================] - 2s 5ms/step - loss: 179234816000.0000 - mae: 295298.2812 - val_loss: 200782200832.0000 - val_mae: 298681.4375\n","Epoch 35/100\n","462/462 [==============================] - 2s 5ms/step - loss: 179323371520.0000 - mae: 294810.6250 - val_loss: 228074700800.0000 - val_mae: 299165.5938\n","Epoch 36/100\n","462/462 [==============================] - 2s 5ms/step - loss: 179015516160.0000 - mae: 294150.3438 - val_loss: 211060555776.0000 - val_mae: 302220.2188\n","Epoch 37/100\n","462/462 [==============================] - 3s 6ms/step - loss: 179300827136.0000 - mae: 295318.5312 - val_loss: 237995360256.0000 - val_mae: 300894.4062\n","Epoch 38/100\n","462/462 [==============================] - 2s 5ms/step - loss: 179068305408.0000 - mae: 294985.4688 - val_loss: 313007472640.0000 - val_mae: 302570.1875\n","Epoch 39/100\n","462/462 [==============================] - 2s 5ms/step - loss: 179375620096.0000 - mae: 295727.7188 - val_loss: 253575479296.0000 - val_mae: 299972.6250\n","Epoch 40/100\n","462/462 [==============================] - 3s 6ms/step - loss: 175271477248.0000 - mae: 291065.3125 - val_loss: 185483034624.0000 - val_mae: 287484.5938\n","Epoch 41/100\n","462/462 [==============================] - 2s 5ms/step - loss: 172653510656.0000 - mae: 287291.1875 - val_loss: 362984439808.0000 - val_mae: 288624.5938\n","Epoch 42/100\n","462/462 [==============================] - 2s 5ms/step - loss: 174006124544.0000 - mae: 288039.9375 - val_loss: 166934659072.0000 - val_mae: 280196.9375\n","Epoch 43/100\n","462/462 [==============================] - 2s 5ms/step - loss: 172231606272.0000 - mae: 286817.6562 - val_loss: 235011440640.0000 - val_mae: 288219.3750\n","Epoch 44/100\n","462/462 [==============================] - 2s 5ms/step - loss: 175517908992.0000 - mae: 290261.3750 - val_loss: 460816121856.0000 - val_mae: 326043.0625\n","Epoch 45/100\n","462/462 [==============================] - 3s 6ms/step - loss: 179873972224.0000 - mae: 295273.5000 - val_loss: 202533765120.0000 - val_mae: 297045.2500\n","Epoch 46/100\n","462/462 [==============================] - 3s 6ms/step - loss: 178479022080.0000 - mae: 295272.2188 - val_loss: 190156521472.0000 - val_mae: 294714.4062\n","Epoch 47/100\n","462/462 [==============================] - 3s 6ms/step - loss: 179301302272.0000 - mae: 295157.8438 - val_loss: 469525069824.0000 - val_mae: 308550.5312\n","Epoch 48/100\n","462/462 [==============================] - 3s 5ms/step - loss: 179569295360.0000 - mae: 295313.5000 - val_loss: 275698745344.0000 - val_mae: 299213.1562\n","Epoch 49/100\n","462/462 [==============================] - 3s 6ms/step - loss: 178569920512.0000 - mae: 294405.2812 - val_loss: 235646271488.0000 - val_mae: 297300.5000\n","Epoch 50/100\n","462/462 [==============================] - 2s 5ms/step - loss: 178325094400.0000 - mae: 294352.4375 - val_loss: 887295246336.0000 - val_mae: 311648.1250\n","Epoch 51/100\n","462/462 [==============================] - 2s 5ms/step - loss: 178836373504.0000 - mae: 294813.9062 - val_loss: 278340009984.0000 - val_mae: 298683.3750\n","Epoch 52/100\n","462/462 [==============================] - 3s 6ms/step - loss: 174507573248.0000 - mae: 290137.4688 - val_loss: 429590904832.0000 - val_mae: 297093.1562\n","Epoch 53/100\n","462/462 [==============================] - 3s 6ms/step - loss: 173173686272.0000 - mae: 287786.8125 - val_loss: 381588897792.0000 - val_mae: 298006.3750\n","Epoch 54/100\n","462/462 [==============================] - 3s 5ms/step - loss: 178991775744.0000 - mae: 293874.4688 - val_loss: 262992560128.0000 - val_mae: 301778.4375\n","Epoch 55/100\n","462/462 [==============================] - 2s 5ms/step - loss: 179875971072.0000 - mae: 294608.1875 - val_loss: 573301653504.0000 - val_mae: 305323.5938\n","Epoch 56/100\n","462/462 [==============================] - 2s 5ms/step - loss: 179654295552.0000 - mae: 294956.1250 - val_loss: 683516887040.0000 - val_mae: 310000.3438\n","Epoch 57/100\n","462/462 [==============================] - 2s 5ms/step - loss: 179418218496.0000 - mae: 295637.3438 - val_loss: 583595589632.0000 - val_mae: 312469.1562\n","Epoch 58/100\n","462/462 [==============================] - 3s 6ms/step - loss: 179574996992.0000 - mae: 295511.5625 - val_loss: 175419555840.0000 - val_mae: 289678.9062\n","Epoch 59/100\n","462/462 [==============================] - 3s 5ms/step - loss: 179214204928.0000 - mae: 294614.5312 - val_loss: 179676135424.0000 - val_mae: 291104.0625\n","Epoch 60/100\n","462/462 [==============================] - 3s 6ms/step - loss: 179334774784.0000 - mae: 295163.9375 - val_loss: 176371826688.0000 - val_mae: 287730.7188\n","Epoch 61/100\n","462/462 [==============================] - 3s 5ms/step - loss: 179103498240.0000 - mae: 295415.1562 - val_loss: 180295942144.0000 - val_mae: 289915.0000\n","Epoch 62/100\n","462/462 [==============================] - 2s 5ms/step - loss: 178862276608.0000 - mae: 295023.2812 - val_loss: 193817231360.0000 - val_mae: 295889.1875\n","Epoch 63/100\n","462/462 [==============================] - 2s 5ms/step - loss: 179097305088.0000 - mae: 295203.7500 - val_loss: 178340446208.0000 - val_mae: 289156.0000\n","Epoch 64/100\n","462/462 [==============================] - 2s 5ms/step - loss: 178535104512.0000 - mae: 295079.7500 - val_loss: 218659192832.0000 - val_mae: 294821.9688\n","Epoch 65/100\n","462/462 [==============================] - 3s 5ms/step - loss: 179224625152.0000 - mae: 295040.4062 - val_loss: 178186764288.0000 - val_mae: 289753.4375\n","Epoch 66/100\n","462/462 [==============================] - 2s 5ms/step - loss: 178811944960.0000 - mae: 294502.0312 - val_loss: 197268275200.0000 - val_mae: 292308.6562\n","Epoch 67/100\n","462/462 [==============================] - 2s 5ms/step - loss: 178779684864.0000 - mae: 294418.9062 - val_loss: 190579261440.0000 - val_mae: 293141.1250\n","Epoch 68/100\n","462/462 [==============================] - 2s 5ms/step - loss: 178737905664.0000 - mae: 294790.8750 - val_loss: 190632542208.0000 - val_mae: 292468.0625\n","Epoch 69/100\n","462/462 [==============================] - 2s 5ms/step - loss: 178663161856.0000 - mae: 295264.2188 - val_loss: 178765447168.0000 - val_mae: 290455.4688\n","Epoch 70/100\n","462/462 [==============================] - 3s 6ms/step - loss: 178654494720.0000 - mae: 293934.4375 - val_loss: 186528186368.0000 - val_mae: 294743.8125\n","Epoch 71/100\n","462/462 [==============================] - 3s 5ms/step - loss: 178071846912.0000 - mae: 294044.0312 - val_loss: 180154630144.0000 - val_mae: 289293.0000\n","Epoch 72/100\n","462/462 [==============================] - 2s 5ms/step - loss: 178909429760.0000 - mae: 294129.7188 - val_loss: 199817674752.0000 - val_mae: 341784.8438\n","Epoch 73/100\n","462/462 [==============================] - 3s 6ms/step - loss: 176548921344.0000 - mae: 292066.1562 - val_loss: 168974893056.0000 - val_mae: 285384.6562\n","Epoch 74/100\n","462/462 [==============================] - 2s 5ms/step - loss: 172257132544.0000 - mae: 287554.7188 - val_loss: 166247792640.0000 - val_mae: 289794.7812\n","Epoch 75/100\n","462/462 [==============================] - 3s 5ms/step - loss: 175557984256.0000 - mae: 290958.2812 - val_loss: 177068539904.0000 - val_mae: 303758.3125\n","Epoch 76/100\n","462/462 [==============================] - 2s 5ms/step - loss: 179354927104.0000 - mae: 295164.0625 - val_loss: 175886270464.0000 - val_mae: 291658.6875\n","Epoch 77/100\n","462/462 [==============================] - 3s 6ms/step - loss: 179329662976.0000 - mae: 295232.2812 - val_loss: 178921340928.0000 - val_mae: 298727.0312\n","Epoch 78/100\n","462/462 [==============================] - 3s 6ms/step - loss: 178902073344.0000 - mae: 294989.7188 - val_loss: 177710612480.0000 - val_mae: 292801.8750\n","Epoch 79/100\n","462/462 [==============================] - 3s 6ms/step - loss: 178836570112.0000 - mae: 294768.4375 - val_loss: 183154262016.0000 - val_mae: 292921.8125\n","Epoch 80/100\n","462/462 [==============================] - 2s 5ms/step - loss: 179111313408.0000 - mae: 294904.2188 - val_loss: 179990953984.0000 - val_mae: 292470.0000\n","Epoch 81/100\n","462/462 [==============================] - 3s 5ms/step - loss: 179211698176.0000 - mae: 295386.5000 - val_loss: 176264790016.0000 - val_mae: 289341.1875\n","Epoch 82/100\n","462/462 [==============================] - 2s 5ms/step - loss: 178828394496.0000 - mae: 294113.7500 - val_loss: 178985730048.0000 - val_mae: 287684.0312\n","Epoch 83/100\n","462/462 [==============================] - 3s 6ms/step - loss: 179112476672.0000 - mae: 294801.0938 - val_loss: 173935329280.0000 - val_mae: 290956.6250\n","Epoch 84/100\n","462/462 [==============================] - 2s 5ms/step - loss: 179243876352.0000 - mae: 295102.1250 - val_loss: 3131516125184.0000 - val_mae: 1453835.8750\n","Epoch 85/100\n","462/462 [==============================] - 2s 5ms/step - loss: 177862688768.0000 - mae: 293563.8438 - val_loss: 168895725568.0000 - val_mae: 278820.6875\n","Epoch 86/100\n","462/462 [==============================] - 2s 5ms/step - loss: 173584023552.0000 - mae: 288021.6250 - val_loss: 165311463424.0000 - val_mae: 278408.7812\n","Epoch 87/100\n","462/462 [==============================] - 3s 5ms/step - loss: 172555059200.0000 - mae: 286885.1250 - val_loss: 166170345472.0000 - val_mae: 280482.5938\n","Epoch 88/100\n","462/462 [==============================] - 2s 5ms/step - loss: 174774747136.0000 - mae: 289950.8750 - val_loss: 182886727680.0000 - val_mae: 323829.4688\n","Epoch 89/100\n","462/462 [==============================] - 2s 5ms/step - loss: 179716489216.0000 - mae: 295052.6250 - val_loss: 177440866304.0000 - val_mae: 292877.4688\n","Epoch 90/100\n","462/462 [==============================] - 3s 6ms/step - loss: 179860586496.0000 - mae: 295254.1875 - val_loss: 178674237440.0000 - val_mae: 290322.2500\n","Epoch 91/100\n","462/462 [==============================] - 3s 6ms/step - loss: 179180290048.0000 - mae: 295116.2812 - val_loss: 177151983616.0000 - val_mae: 291262.2500\n","Epoch 92/100\n","462/462 [==============================] - 3s 6ms/step - loss: 178902237184.0000 - mae: 295734.2188 - val_loss: 179822821376.0000 - val_mae: 290299.0938\n","Epoch 93/100\n","462/462 [==============================] - 2s 5ms/step - loss: 179050348544.0000 - mae: 294840.0938 - val_loss: 183553409024.0000 - val_mae: 291922.7188\n","Epoch 94/100\n","462/462 [==============================] - 2s 5ms/step - loss: 178902646784.0000 - mae: 294912.1250 - val_loss: 184727420928.0000 - val_mae: 291976.1875\n","Epoch 95/100\n","462/462 [==============================] - 2s 5ms/step - loss: 179350093824.0000 - mae: 294582.5312 - val_loss: 179064930304.0000 - val_mae: 293893.7812\n","Epoch 96/100\n","462/462 [==============================] - 3s 5ms/step - loss: 179132514304.0000 - mae: 295256.9375 - val_loss: 186825949184.0000 - val_mae: 297513.5938\n","Epoch 97/100\n","462/462 [==============================] - 3s 5ms/step - loss: 178883575808.0000 - mae: 294743.3750 - val_loss: 194406039552.0000 - val_mae: 296088.8125\n","Epoch 98/100\n","462/462 [==============================] - 2s 5ms/step - loss: 179310264320.0000 - mae: 295516.1875 - val_loss: 199034044416.0000 - val_mae: 293775.2500\n","Epoch 99/100\n","462/462 [==============================] - 2s 5ms/step - loss: 179108331520.0000 - mae: 295277.8750 - val_loss: 220202401792.0000 - val_mae: 300183.2188\n","Epoch 100/100\n","462/462 [==============================] - 3s 5ms/step - loss: 178872336384.0000 - mae: 294813.4375 - val_loss: 189253828608.0000 - val_mae: 294219.3125\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7f2b475f5f90>"]},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["model2_predict = model2.predict(xVal)\n","MSE(yVal, model2_predict); R2(yVal, model2_predict);"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lAfkBbBsGlj5","executionInfo":{"status":"ok","timestamp":1656438491274,"user_tz":-180,"elapsed":16,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"8fc93753-73d2-47d5-e028-5b5b3b55bfbd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["MSE: 189253848056.303\n","R2: -0.083\n"]}]},{"cell_type":"markdown","source":["Вывод: простая нейронка не справилась с задачей, необходимо лучше подготовить обучающие данные. Необходимо провести нормализацию данных и изменить саму структуру нейронки."],"metadata":{"id":"TXVd2NSrB2T7"}},{"cell_type":"markdown","source":["# Попробуем иной способ формирования обучающей и тестовой выборки.\n","Необходимо нормализовать данные и сформировать их в виде векторов."],"metadata":{"id":"VuN2e0pMCjpb"}},{"cell_type":"code","source":["# Загружаем ранее отредактированную базу\n","df = pd.read_csv('/content/drive/MyDrive/диплом/Avto.csv')"],"metadata":{"id":"MrZKyW7tr1M5","executionInfo":{"status":"ok","timestamp":1656666635384,"user_tz":-180,"elapsed":783,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}}},"execution_count":29,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"MJshS0MiCNIV","executionInfo":{"status":"ok","timestamp":1656666635386,"user_tz":-180,"elapsed":20,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"798e19f8-c28d-4d94-8f26-b05896320098"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  марка модель  мощность     год    пробег  двери        кузов топливо  \\\n","0  Audi     A4       150  2017.0   89000.0    4.0        седан  бензин   \n","1  Audi     Q5       170  2012.0  104000.0    5.0  внедорожник  дизель   \n","2  Audi     Q5       211  2010.0  113043.0    5.0  внедорожник  бензин   \n","3  Audi     A8       174  1996.0  460000.0    4.0        седан  бензин   \n","4  Audi     A6       150  1995.0  325757.0    4.0        седан  бензин   \n","\n","  трансмиссия    привод     цена  \n","0       робот  передний  1490000  \n","1       робот    полный   950000  \n","2       робот    полный   897000  \n","3    механика  передний   200000  \n","4    механика  передний   129000  "],"text/html":["\n","  <div id=\"df-17334605-041e-4dda-a88e-192f6efb8f64\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>марка</th>\n","      <th>модель</th>\n","      <th>мощность</th>\n","      <th>год</th>\n","      <th>пробег</th>\n","      <th>двери</th>\n","      <th>кузов</th>\n","      <th>топливо</th>\n","      <th>трансмиссия</th>\n","      <th>привод</th>\n","      <th>цена</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Audi</td>\n","      <td>A4</td>\n","      <td>150</td>\n","      <td>2017.0</td>\n","      <td>89000.0</td>\n","      <td>4.0</td>\n","      <td>седан</td>\n","      <td>бензин</td>\n","      <td>робот</td>\n","      <td>передний</td>\n","      <td>1490000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Audi</td>\n","      <td>Q5</td>\n","      <td>170</td>\n","      <td>2012.0</td>\n","      <td>104000.0</td>\n","      <td>5.0</td>\n","      <td>внедорожник</td>\n","      <td>дизель</td>\n","      <td>робот</td>\n","      <td>полный</td>\n","      <td>950000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Audi</td>\n","      <td>Q5</td>\n","      <td>211</td>\n","      <td>2010.0</td>\n","      <td>113043.0</td>\n","      <td>5.0</td>\n","      <td>внедорожник</td>\n","      <td>бензин</td>\n","      <td>робот</td>\n","      <td>полный</td>\n","      <td>897000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Audi</td>\n","      <td>A8</td>\n","      <td>174</td>\n","      <td>1996.0</td>\n","      <td>460000.0</td>\n","      <td>4.0</td>\n","      <td>седан</td>\n","      <td>бензин</td>\n","      <td>механика</td>\n","      <td>передний</td>\n","      <td>200000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Audi</td>\n","      <td>A6</td>\n","      <td>150</td>\n","      <td>1995.0</td>\n","      <td>325757.0</td>\n","      <td>4.0</td>\n","      <td>седан</td>\n","      <td>бензин</td>\n","      <td>механика</td>\n","      <td>передний</td>\n","      <td>129000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-17334605-041e-4dda-a88e-192f6efb8f64')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-17334605-041e-4dda-a88e-192f6efb8f64 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-17334605-041e-4dda-a88e-192f6efb8f64');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["# Создаём словари по всем текстовым колонкам\n","mark = create_dict(set(df['марка']))\n","model = create_dict(set(df['модель']))\n","bodie = create_dict(set(df['кузов']))\n","fuel = create_dict(set(df['топливо']))\n","transmission = create_dict(set(df['трансмиссия']))\n","privod = create_dict(set(df['привод']))\n","\n","# Запоминаем цены\n","price = np.array(df['цена'], dtype=np.float)\n","\n","# Запоминаем числовые параметры\n","# и нормируем\n","power = preprocessing.scale(df['мощность'])\n","year = preprocessing.scale(df['год'])\n","mileage = preprocessing.scale(df['пробег'])\n","doors = preprocessing.scale(df['двери'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hVrwC55vNNmH","executionInfo":{"status":"ok","timestamp":1656666635388,"user_tz":-180,"elapsed":18,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"3053eed6-2136-4fdd-a694-fc2b97faab46"},"execution_count":31,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:10: DeprecationWarning: `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n","Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n","  # Remove the CWD from sys.path while we load stuff.\n"]}]},{"cell_type":"code","source":["# Создаём пустую обучающую выборку\n","x_train = []\n","y_train = []\n","\n","# Проходам по всем машинам\n","for id, car in enumerate(np.array(df)):\n","  # В y_train добавляем цену\n","  y_train.append(price[id])\n","  \n","  # В x_train объединяем все параметры\n","  # Категорийные параметры добавляем в виде ohe\n","  # Числовые параметры добавляем напрямую\n","  X = to_ohe(car[0], mark) + \\\n","      to_ohe(car[1], model) + \\\n","      to_ohe(car[6], bodie) + \\\n","      to_ohe(car[7], fuel) + \\\n","      to_ohe(car[8], transmission) + \\\n","      to_ohe(car[9], privod) + \\\n","      [power[id]] + \\\n","      [year[id]] + \\\n","      [mileage[id]] + \\\n","      [doors[id]]\n","  \n","  # Добавляем текущую строку в общий x_train\n","  x_train.append(X)\n","\n","# Превращаем лист в numpy.array\n","x_train = np.array(x_train, dtype=np.float)\n","y_train = np.array(y_train, dtype=np.float)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"81LrmUjaNO1c","executionInfo":{"status":"ok","timestamp":1656666637147,"user_tz":-180,"elapsed":1773,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"56e909f3-67d3-4d0e-8695-6125bdd49bc5"},"execution_count":32,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:19: DeprecationWarning: `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n","Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:20: DeprecationWarning: `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n","Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n"]}]},{"cell_type":"code","source":["print(x_train.shape)\n","print(y_train.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ly-H9zC1NtIG","executionInfo":{"status":"ok","timestamp":1656666637147,"user_tz":-180,"elapsed":11,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"feeea10b-c00e-4c08-a78f-76c108513941"},"execution_count":33,"outputs":[{"output_type":"stream","name":"stdout","text":["(18473, 618)\n","(18473,)\n"]}]},{"cell_type":"code","source":["# Нормируем цены\n","y_scaler = StandardScaler()\n","y_train_scaled = y_scaler.fit_transform(y_train.reshape(-1,1)).flatten()"],"metadata":{"id":"2Tuhi82SNxw-","executionInfo":{"status":"ok","timestamp":1656666637148,"user_tz":-180,"elapsed":10,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}}},"execution_count":34,"outputs":[]},{"cell_type":"code","source":["y_train_scaled.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Nv2PyKneUzHJ","executionInfo":{"status":"ok","timestamp":1656666637148,"user_tz":-180,"elapsed":10,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"314bd419-276d-4447-d0e3-524d7cc8ff99"},"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(18473,)"]},"metadata":{},"execution_count":35}]},{"cell_type":"code","source":["# Сделаем обучающие и тестовые выборки\n","\n","x_Train, x_test, y_Train, y_test = train_test_split(x_train, y_train_scaled, test_size=0.1, shuffle=True)\n","\n","x_Train, x_val, y_Train, y_val = train_test_split(x_Train, y_Train, test_size=0.2, shuffle=True)\n","\n","print('x_Train', x_Train.shape)\n","print('y_Train', y_Train.shape)\n","print('x_val', x_val.shape)\n","print('y_val', y_val.shape)\n","print('x_test', x_test.shape)\n","print('y_test', y_test.shape)"],"metadata":{"id":"fbec2S8RU1Wl","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1656666637149,"user_tz":-180,"elapsed":9,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"0a8f0d50-2bd0-4f69-e1b8-ebf39ba0d12e"},"execution_count":36,"outputs":[{"output_type":"stream","name":"stdout","text":["x_Train (13300, 618)\n","y_Train (13300,)\n","x_val (3325, 618)\n","y_val (3325,)\n","x_test (1848, 618)\n","y_test (1848,)\n"]}]},{"cell_type":"markdown","source":["# Нормированные данные и метод Random Forest "],"metadata":{"id":"dYaZoyM_Xhz-"}},{"cell_type":"code","source":["ranformod = ensemble.RandomForestRegressor(random_state=123)\n","\n","ranformod.fit(x_Train, y_Train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AEgtzF6hX-a3","executionInfo":{"status":"ok","timestamp":1656438526844,"user_tz":-180,"elapsed":33505,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"2e9bb022-b8fd-4d77-e899-42fc6f0a84ec"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["RandomForestRegressor(random_state=123)"]},"metadata":{},"execution_count":49}]},{"cell_type":"code","source":["ranformod_predict = ranformod.predict(x_test)"],"metadata":{"id":"S9CvUtPybJLY"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["predict_ranformod_inverse = y_scaler.inverse_transform(ranformod_predict.reshape(-1,1)).flatten()\n","yTrainReal = y_scaler.inverse_transform(y_test.reshape(-1,1)).flatten()"],"metadata":{"id":"-j0SuDSvhXTd"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["MSE(yTrainReal, predict_ranformod_inverse); R2(yTrainReal, predict_ranformod_inverse);"],"metadata":{"id":"X1-h-LVEcL-2","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1656438526845,"user_tz":-180,"elapsed":15,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"a51f2463-20e9-4553-80d4-ea7a71540245"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["MSE: 14485959940.251\n","R2: 0.920\n"]}]},{"cell_type":"code","source":["d = {'реальная цена' : list(yTrainReal),\n","     'предсказанная цена' : pd.Series(predict_ranformod_inverse)\n","    }\n","pd.DataFrame(d).head(7)"],"metadata":{"id":"kPpbFkzofSdZ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1656438526845,"user_tz":-180,"elapsed":13,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"95a169fe-c5ca-47eb-d4ba-5897234ccd09"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   реальная цена  предсказанная цена\n","0       679000.0           659320.00\n","1      1159000.0          1065776.70\n","2       568000.0           622886.61\n","3       555000.0           526689.50\n","4       325000.0           271049.60\n","5       385000.0           319649.69\n","6       465000.0           491306.78"],"text/html":["\n","  <div id=\"df-2f595faa-7984-4934-bc74-9a2c07f1b396\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>реальная цена</th>\n","      <th>предсказанная цена</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>679000.0</td>\n","      <td>659320.00</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1159000.0</td>\n","      <td>1065776.70</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>568000.0</td>\n","      <td>622886.61</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>555000.0</td>\n","      <td>526689.50</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>325000.0</td>\n","      <td>271049.60</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>385000.0</td>\n","      <td>319649.69</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>465000.0</td>\n","      <td>491306.78</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2f595faa-7984-4934-bc74-9a2c07f1b396')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-2f595faa-7984-4934-bc74-9a2c07f1b396 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-2f595faa-7984-4934-bc74-9a2c07f1b396');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":53}]},{"cell_type":"code","source":["estimation_model(yTrainReal,predict_ranformod_inverse)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Z-6LzUg-fLVM","executionInfo":{"status":"ok","timestamp":1656438526846,"user_tz":-180,"elapsed":13,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"8b758825-3c53-41ce-f2c5-8926fd8ec082"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Средняя ошибка:  67995 руб.\n","Средняя цена:  473683 руб.\n","Процент ошибки: 14%\n","Процент точности: 86%\n"]}]},{"cell_type":"markdown","source":["Вывод: нормированние данных не повлияло на результат обучения модели методом Random Forest"],"metadata":{"id":"zHEx1cwtfpKO"}},{"cell_type":"markdown","source":["# Нормированные данные и простая нейронная сеть"],"metadata":{"id":"jaLp20ITgNkA"}},{"cell_type":"code","source":["model3 = Sequential()\n","model3.add(Dense(32, input_dim=x_Train.shape[1], activation='relu'))\n","model3.add(Dropout(0.2))\n","model3.add(Dense(16,  activation='tanh'))\n","model3.add(Dropout(0.2))\n","model3.add(Dense(1, activation='linear'))\n","\n","model3.compile(loss='mse', optimizer=Adam(0.01))"],"metadata":{"id":"Opjne1lIf8JS"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["history = model3.fit(x_Train, y_Train, batch_size=2048, epochs=30, validation_data=(x_val, y_val), verbose=1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"otkQo74Ugnt1","executionInfo":{"status":"ok","timestamp":1656438533018,"user_tz":-180,"elapsed":6184,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"f9d13ad4-fd8f-490d-dc3c-974aa25c5181"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/30\n","7/7 [==============================] - 1s 37ms/step - loss: 0.5587 - val_loss: 0.2447\n","Epoch 2/30\n","7/7 [==============================] - 0s 16ms/step - loss: 0.2663 - val_loss: 0.1555\n","Epoch 3/30\n","7/7 [==============================] - 0s 16ms/step - loss: 0.1951 - val_loss: 0.1334\n","Epoch 4/30\n","7/7 [==============================] - 0s 17ms/step - loss: 0.1574 - val_loss: 0.1021\n","Epoch 5/30\n","7/7 [==============================] - 0s 19ms/step - loss: 0.1341 - val_loss: 0.0981\n","Epoch 6/30\n","7/7 [==============================] - 0s 17ms/step - loss: 0.1182 - val_loss: 0.0824\n","Epoch 7/30\n","7/7 [==============================] - 0s 18ms/step - loss: 0.1133 - val_loss: 0.0809\n","Epoch 8/30\n","7/7 [==============================] - 0s 17ms/step - loss: 0.1066 - val_loss: 0.0790\n","Epoch 9/30\n","7/7 [==============================] - 0s 18ms/step - loss: 0.1027 - val_loss: 0.0723\n","Epoch 10/30\n","7/7 [==============================] - 0s 17ms/step - loss: 0.0980 - val_loss: 0.0721\n","Epoch 11/30\n","7/7 [==============================] - 0s 20ms/step - loss: 0.0934 - val_loss: 0.0698\n","Epoch 12/30\n","7/7 [==============================] - 0s 17ms/step - loss: 0.0926 - val_loss: 0.0695\n","Epoch 13/30\n","7/7 [==============================] - 0s 16ms/step - loss: 0.0931 - val_loss: 0.0686\n","Epoch 14/30\n","7/7 [==============================] - 0s 17ms/step - loss: 0.0881 - val_loss: 0.0678\n","Epoch 15/30\n","7/7 [==============================] - 0s 16ms/step - loss: 0.0879 - val_loss: 0.0689\n","Epoch 16/30\n","7/7 [==============================] - 0s 17ms/step - loss: 0.0864 - val_loss: 0.0671\n","Epoch 17/30\n","7/7 [==============================] - 0s 21ms/step - loss: 0.0855 - val_loss: 0.0660\n","Epoch 18/30\n","7/7 [==============================] - 0s 17ms/step - loss: 0.0845 - val_loss: 0.0652\n","Epoch 19/30\n","7/7 [==============================] - 0s 17ms/step - loss: 0.0830 - val_loss: 0.0642\n","Epoch 20/30\n","7/7 [==============================] - 0s 17ms/step - loss: 0.0839 - val_loss: 0.0645\n","Epoch 21/30\n","7/7 [==============================] - 0s 17ms/step - loss: 0.0823 - val_loss: 0.0669\n","Epoch 22/30\n","7/7 [==============================] - 0s 17ms/step - loss: 0.0803 - val_loss: 0.0675\n","Epoch 23/30\n","7/7 [==============================] - 0s 17ms/step - loss: 0.0804 - val_loss: 0.0653\n","Epoch 24/30\n","7/7 [==============================] - 0s 17ms/step - loss: 0.0812 - val_loss: 0.0642\n","Epoch 25/30\n","7/7 [==============================] - 0s 19ms/step - loss: 0.0793 - val_loss: 0.0632\n","Epoch 26/30\n","7/7 [==============================] - 0s 17ms/step - loss: 0.0791 - val_loss: 0.0628\n","Epoch 27/30\n","7/7 [==============================] - 0s 16ms/step - loss: 0.0807 - val_loss: 0.0630\n","Epoch 28/30\n","7/7 [==============================] - 0s 17ms/step - loss: 0.0772 - val_loss: 0.0634\n","Epoch 29/30\n","7/7 [==============================] - 0s 19ms/step - loss: 0.0794 - val_loss: 0.0628\n","Epoch 30/30\n","7/7 [==============================] - 0s 16ms/step - loss: 0.0789 - val_loss: 0.0633\n"]}]},{"cell_type":"code","source":["plt.plot(history.history['loss'], \n","         label='Ошибка на обучающем наборе')\n","plt.plot(history.history['val_loss'], \n","         label='Ошибка на проверочном наборе')\n","plt.xlabel('Эпоха обучения')\n","plt.ylabel('Ошибка')\n","plt.legend()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":279},"id":"ld5XMsQqhL0E","executionInfo":{"status":"ok","timestamp":1656438533020,"user_tz":-180,"elapsed":18,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"9827aee7-7592-490c-ab2e-c105fb2c68f1"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["# дообучим модель на 100 эпохах, изменив lr и batch_size\n","\n","model3.compile(loss='mse', optimizer=Adam(0.001))\n","history = model3.fit(x_Train, y_Train, batch_size=1024, epochs=100, validation_data=(x_val, y_val), verbose=1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"KwUF43dhhPpP","executionInfo":{"status":"ok","timestamp":1656438547732,"user_tz":-180,"elapsed":14726,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"b71a2a6d-7797-42cf-bbde-09fc3b062d28"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","13/13 [==============================] - 1s 20ms/step - loss: 0.0774 - val_loss: 0.0642\n","Epoch 2/100\n","13/13 [==============================] - 0s 10ms/step - loss: 0.0751 - val_loss: 0.0611\n","Epoch 3/100\n","13/13 [==============================] - 0s 11ms/step - loss: 0.0741 - val_loss: 0.0612\n","Epoch 4/100\n","13/13 [==============================] - 0s 11ms/step - loss: 0.0748 - val_loss: 0.0605\n","Epoch 5/100\n","13/13 [==============================] - 0s 11ms/step - loss: 0.0767 - val_loss: 0.0628\n","Epoch 6/100\n","13/13 [==============================] - 0s 11ms/step - loss: 0.0720 - val_loss: 0.0605\n","Epoch 7/100\n","13/13 [==============================] - 0s 10ms/step - loss: 0.0737 - val_loss: 0.0609\n","Epoch 8/100\n","13/13 [==============================] - 0s 10ms/step - loss: 0.0739 - val_loss: 0.0609\n","Epoch 9/100\n","13/13 [==============================] - 0s 10ms/step - loss: 0.0736 - val_loss: 0.0601\n","Epoch 10/100\n","13/13 [==============================] - 0s 11ms/step - loss: 0.0719 - val_loss: 0.0598\n","Epoch 11/100\n","13/13 [==============================] - 0s 11ms/step - loss: 0.0716 - val_loss: 0.0601\n","Epoch 12/100\n","13/13 [==============================] - 0s 10ms/step - loss: 0.0724 - val_loss: 0.0594\n","Epoch 13/100\n","13/13 [==============================] - 0s 11ms/step - loss: 0.0741 - val_loss: 0.0599\n","Epoch 14/100\n","13/13 [==============================] - 0s 11ms/step - loss: 0.0719 - val_loss: 0.0607\n","Epoch 15/100\n","13/13 [==============================] - 0s 11ms/step - loss: 0.0744 - val_loss: 0.0615\n","Epoch 16/100\n","13/13 [==============================] - 0s 10ms/step - loss: 0.0729 - val_loss: 0.0603\n","Epoch 17/100\n","13/13 [==============================] - 0s 11ms/step - loss: 0.0741 - val_loss: 0.0599\n","Epoch 18/100\n","13/13 [==============================] - 0s 11ms/step - loss: 0.0715 - val_loss: 0.0606\n","Epoch 19/100\n","13/13 [==============================] - 0s 10ms/step - loss: 0.0719 - val_loss: 0.0603\n","Epoch 20/100\n","13/13 [==============================] - 0s 11ms/step - loss: 0.0700 - val_loss: 0.0600\n","Epoch 21/100\n","13/13 [==============================] - 0s 11ms/step - loss: 0.0705 - val_loss: 0.0606\n","Epoch 22/100\n","13/13 [==============================] - 0s 10ms/step - loss: 0.0707 - val_loss: 0.0597\n","Epoch 23/100\n","13/13 [==============================] - 0s 11ms/step - loss: 0.0714 - val_loss: 0.0605\n","Epoch 24/100\n","13/13 [==============================] - 0s 12ms/step - loss: 0.0712 - val_loss: 0.0604\n","Epoch 25/100\n","13/13 [==============================] - 0s 11ms/step - loss: 0.0677 - val_loss: 0.0603\n","Epoch 26/100\n","13/13 [==============================] - 0s 10ms/step - loss: 0.0707 - val_loss: 0.0602\n","Epoch 27/100\n","13/13 [==============================] - 0s 10ms/step - loss: 0.0703 - val_loss: 0.0607\n","Epoch 28/100\n","13/13 [==============================] - 0s 11ms/step - loss: 0.0700 - val_loss: 0.0602\n","Epoch 29/100\n","13/13 [==============================] - 0s 10ms/step - loss: 0.0700 - val_loss: 0.0609\n","Epoch 30/100\n","13/13 [==============================] - 0s 11ms/step - loss: 0.0721 - val_loss: 0.0607\n","Epoch 31/100\n","13/13 [==============================] - 0s 11ms/step - loss: 0.0698 - val_loss: 0.0606\n","Epoch 32/100\n","13/13 [==============================] - 0s 10ms/step - loss: 0.0688 - val_loss: 0.0600\n","Epoch 33/100\n","13/13 [==============================] - 0s 10ms/step - loss: 0.0717 - val_loss: 0.0611\n","Epoch 34/100\n","13/13 [==============================] - 0s 11ms/step - loss: 0.0697 - val_loss: 0.0606\n","Epoch 35/100\n","13/13 [==============================] - 0s 11ms/step - loss: 0.0700 - val_loss: 0.0601\n","Epoch 36/100\n","13/13 [==============================] - 0s 11ms/step - loss: 0.0725 - val_loss: 0.0620\n","Epoch 37/100\n","13/13 [==============================] - 0s 10ms/step - loss: 0.0689 - val_loss: 0.0612\n","Epoch 38/100\n","13/13 [==============================] - 0s 11ms/step - loss: 0.0713 - val_loss: 0.0598\n","Epoch 39/100\n","13/13 [==============================] - 0s 10ms/step - loss: 0.0701 - val_loss: 0.0606\n","Epoch 40/100\n","13/13 [==============================] - 0s 10ms/step - loss: 0.0724 - val_loss: 0.0600\n","Epoch 41/100\n","13/13 [==============================] - 0s 11ms/step - loss: 0.0731 - val_loss: 0.0597\n","Epoch 42/100\n","13/13 [==============================] - 0s 10ms/step - loss: 0.0691 - val_loss: 0.0597\n","Epoch 43/100\n","13/13 [==============================] - 0s 9ms/step - loss: 0.0697 - val_loss: 0.0604\n","Epoch 44/100\n","13/13 [==============================] - 0s 11ms/step - loss: 0.0682 - val_loss: 0.0600\n","Epoch 45/100\n","13/13 [==============================] - 0s 11ms/step - loss: 0.0714 - val_loss: 0.0590\n","Epoch 46/100\n","13/13 [==============================] - 0s 10ms/step - loss: 0.0729 - val_loss: 0.0594\n","Epoch 47/100\n","13/13 [==============================] - 0s 11ms/step - loss: 0.0696 - val_loss: 0.0596\n","Epoch 48/100\n","13/13 [==============================] - 0s 10ms/step - loss: 0.0697 - val_loss: 0.0587\n","Epoch 49/100\n","13/13 [==============================] - 0s 10ms/step - loss: 0.0688 - val_loss: 0.0596\n","Epoch 50/100\n","13/13 [==============================] - 0s 10ms/step - loss: 0.0707 - val_loss: 0.0588\n","Epoch 51/100\n","13/13 [==============================] - 0s 10ms/step - loss: 0.0682 - val_loss: 0.0582\n","Epoch 52/100\n","13/13 [==============================] - 0s 10ms/step - loss: 0.0677 - val_loss: 0.0589\n","Epoch 53/100\n","13/13 [==============================] - 0s 11ms/step - loss: 0.0711 - val_loss: 0.0591\n","Epoch 54/100\n","13/13 [==============================] - 0s 11ms/step - loss: 0.0688 - val_loss: 0.0589\n","Epoch 55/100\n","13/13 [==============================] - 0s 10ms/step - loss: 0.0735 - val_loss: 0.0593\n","Epoch 56/100\n","13/13 [==============================] - 0s 11ms/step - loss: 0.0707 - val_loss: 0.0582\n","Epoch 57/100\n","13/13 [==============================] - 0s 10ms/step - loss: 0.0675 - val_loss: 0.0585\n","Epoch 58/100\n","13/13 [==============================] - 0s 12ms/step - loss: 0.0672 - val_loss: 0.0595\n","Epoch 59/100\n","13/13 [==============================] - 0s 11ms/step - loss: 0.0687 - val_loss: 0.0584\n","Epoch 60/100\n","13/13 [==============================] - 0s 10ms/step - loss: 0.0717 - val_loss: 0.0596\n","Epoch 61/100\n","13/13 [==============================] - 0s 10ms/step - loss: 0.0669 - val_loss: 0.0596\n","Epoch 62/100\n","13/13 [==============================] - 0s 11ms/step - loss: 0.0667 - val_loss: 0.0590\n","Epoch 63/100\n","13/13 [==============================] - 0s 11ms/step - loss: 0.0680 - val_loss: 0.0599\n","Epoch 64/100\n","13/13 [==============================] - 0s 10ms/step - loss: 0.0678 - val_loss: 0.0589\n","Epoch 65/100\n","13/13 [==============================] - 0s 10ms/step - loss: 0.0684 - val_loss: 0.0599\n","Epoch 66/100\n","13/13 [==============================] - 0s 11ms/step - loss: 0.0692 - val_loss: 0.0597\n","Epoch 67/100\n","13/13 [==============================] - 0s 10ms/step - loss: 0.0698 - val_loss: 0.0592\n","Epoch 68/100\n","13/13 [==============================] - 0s 11ms/step - loss: 0.0672 - val_loss: 0.0594\n","Epoch 69/100\n","13/13 [==============================] - 0s 10ms/step - loss: 0.0659 - val_loss: 0.0590\n","Epoch 70/100\n","13/13 [==============================] - 0s 11ms/step - loss: 0.0652 - val_loss: 0.0594\n","Epoch 71/100\n","13/13 [==============================] - 0s 10ms/step - loss: 0.0687 - val_loss: 0.0590\n","Epoch 72/100\n","13/13 [==============================] - 0s 10ms/step - loss: 0.0684 - val_loss: 0.0589\n","Epoch 73/100\n","13/13 [==============================] - 0s 10ms/step - loss: 0.0679 - val_loss: 0.0592\n","Epoch 74/100\n","13/13 [==============================] - 0s 13ms/step - loss: 0.0697 - val_loss: 0.0593\n","Epoch 75/100\n","13/13 [==============================] - 0s 10ms/step - loss: 0.0716 - val_loss: 0.0582\n","Epoch 76/100\n","13/13 [==============================] - 0s 12ms/step - loss: 0.0676 - val_loss: 0.0583\n","Epoch 77/100\n","13/13 [==============================] - 0s 10ms/step - loss: 0.0678 - val_loss: 0.0583\n","Epoch 78/100\n","13/13 [==============================] - 0s 9ms/step - loss: 0.0649 - val_loss: 0.0586\n","Epoch 79/100\n","13/13 [==============================] - 0s 10ms/step - loss: 0.0692 - val_loss: 0.0590\n","Epoch 80/100\n","13/13 [==============================] - 0s 10ms/step - loss: 0.0664 - val_loss: 0.0589\n","Epoch 81/100\n","13/13 [==============================] - 0s 12ms/step - loss: 0.0684 - val_loss: 0.0589\n","Epoch 82/100\n","13/13 [==============================] - 0s 10ms/step - loss: 0.0683 - val_loss: 0.0590\n","Epoch 83/100\n","13/13 [==============================] - 0s 10ms/step - loss: 0.0665 - val_loss: 0.0579\n","Epoch 84/100\n","13/13 [==============================] - 0s 10ms/step - loss: 0.0682 - val_loss: 0.0575\n","Epoch 85/100\n","13/13 [==============================] - 0s 11ms/step - loss: 0.0711 - val_loss: 0.0576\n","Epoch 86/100\n","13/13 [==============================] - 0s 11ms/step - loss: 0.0676 - val_loss: 0.0583\n","Epoch 87/100\n","13/13 [==============================] - 0s 10ms/step - loss: 0.0662 - val_loss: 0.0580\n","Epoch 88/100\n","13/13 [==============================] - 0s 11ms/step - loss: 0.0683 - val_loss: 0.0579\n","Epoch 89/100\n","13/13 [==============================] - 0s 10ms/step - loss: 0.0666 - val_loss: 0.0579\n","Epoch 90/100\n","13/13 [==============================] - 0s 11ms/step - loss: 0.0661 - val_loss: 0.0575\n","Epoch 91/100\n","13/13 [==============================] - 0s 10ms/step - loss: 0.0661 - val_loss: 0.0582\n","Epoch 92/100\n","13/13 [==============================] - 0s 10ms/step - loss: 0.0660 - val_loss: 0.0583\n","Epoch 93/100\n","13/13 [==============================] - 0s 11ms/step - loss: 0.0663 - val_loss: 0.0574\n","Epoch 94/100\n","13/13 [==============================] - 0s 11ms/step - loss: 0.0653 - val_loss: 0.0573\n","Epoch 95/100\n","13/13 [==============================] - 0s 13ms/step - loss: 0.0673 - val_loss: 0.0583\n","Epoch 96/100\n","13/13 [==============================] - 0s 10ms/step - loss: 0.0692 - val_loss: 0.0576\n","Epoch 97/100\n","13/13 [==============================] - 0s 10ms/step - loss: 0.0652 - val_loss: 0.0576\n","Epoch 98/100\n","13/13 [==============================] - 0s 11ms/step - loss: 0.0660 - val_loss: 0.0581\n","Epoch 99/100\n","13/13 [==============================] - 0s 11ms/step - loss: 0.0673 - val_loss: 0.0588\n","Epoch 100/100\n","13/13 [==============================] - 0s 10ms/step - loss: 0.0663 - val_loss: 0.0573\n"]}]},{"cell_type":"code","source":["plt.plot(history.history['loss'], \n","         label='Ошибка на обучающем наборе')\n","plt.plot(history.history['val_loss'], \n","         label='Ошибка на проверочном наборе')\n","plt.xlabel('Эпоха обучения')\n","plt.ylabel('Ошибка')\n","plt.legend()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":279},"id":"Kwo3Pnvehwtj","executionInfo":{"status":"ok","timestamp":1656438548477,"user_tz":-180,"elapsed":11,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"698a7b7d-a36d-4b63-b188-e22a7b859475"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["model3_predict = model3.predict(x_test)\n","predict_model3_inverse = y_scaler.inverse_transform(model3_predict).flatten()\n","yTrainReal = y_scaler.inverse_transform(y_test.reshape(-1,1)).flatten()"],"metadata":{"id":"dgAhj9b5h-NI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["MSE(yTrainReal, predict_model3_inverse); R2(yTrainReal, predict_model3_inverse);"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"A5BQfBECkmy0","executionInfo":{"status":"ok","timestamp":1656438548996,"user_tz":-180,"elapsed":527,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"f30a5c0a-ba6a-4b2b-eacc-d4d72dd1c0a4"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["MSE: 11410121381.863\n","R2: 0.937\n"]}]},{"cell_type":"code","source":["estimation_model(yTrainReal,predict_model3_inverse)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8dtA72nClref","executionInfo":{"status":"ok","timestamp":1656438548996,"user_tz":-180,"elapsed":6,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"db82b934-0ccd-459a-b029-35fa8d907ee2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Средняя ошибка:  63394 руб.\n","Средняя цена:  473683 руб.\n","Процент ошибки: 13%\n","Процент точности: 87%\n"]}]},{"cell_type":"code","source":["# Изменим модель, добавим нейронов сначало, а потом добавим BatchNormalization\n","\n","model4 = Sequential()\n","model4.add(Dense(300, input_dim=x_Train.shape[1], activation='relu'))\n","model4.add(Dropout(0.2))\n","model4.add(Dense(100,  activation='tanh'))\n","model4.add(Dropout(0.2))\n","model4.add(Dense(1, activation='linear'))\n","\n","model4.compile(loss='mse', optimizer=Adam(0.001))"],"metadata":{"id":"gsmjTYSGuh-W"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["history = model4.fit(x_Train, y_Train, batch_size=1024, epochs=50, validation_data=(x_val, y_val), verbose=1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qnLPXrTuuz8N","executionInfo":{"status":"ok","timestamp":1656438571703,"user_tz":-180,"elapsed":22711,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"535e4993-3296-42d2-aff8-11ff208b8d6a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/50\n","13/13 [==============================] - 1s 45ms/step - loss: 0.5004 - val_loss: 0.2903\n","Epoch 2/50\n","13/13 [==============================] - 0s 34ms/step - loss: 0.2309 - val_loss: 0.1593\n","Epoch 3/50\n","13/13 [==============================] - 0s 37ms/step - loss: 0.1552 - val_loss: 0.1184\n","Epoch 4/50\n","13/13 [==============================] - 0s 35ms/step - loss: 0.1181 - val_loss: 0.0979\n","Epoch 5/50\n","13/13 [==============================] - 0s 36ms/step - loss: 0.0991 - val_loss: 0.0832\n","Epoch 6/50\n","13/13 [==============================] - 0s 34ms/step - loss: 0.0874 - val_loss: 0.0760\n","Epoch 7/50\n","13/13 [==============================] - 0s 34ms/step - loss: 0.0807 - val_loss: 0.0717\n","Epoch 8/50\n","13/13 [==============================] - 0s 35ms/step - loss: 0.0738 - val_loss: 0.0672\n","Epoch 9/50\n","13/13 [==============================] - 0s 36ms/step - loss: 0.0686 - val_loss: 0.0647\n","Epoch 10/50\n","13/13 [==============================] - 0s 35ms/step - loss: 0.0662 - val_loss: 0.0628\n","Epoch 11/50\n","13/13 [==============================] - 0s 34ms/step - loss: 0.0636 - val_loss: 0.0603\n","Epoch 12/50\n","13/13 [==============================] - 0s 35ms/step - loss: 0.0609 - val_loss: 0.0588\n","Epoch 13/50\n","13/13 [==============================] - 0s 34ms/step - loss: 0.0580 - val_loss: 0.0575\n","Epoch 14/50\n","13/13 [==============================] - 0s 36ms/step - loss: 0.0559 - val_loss: 0.0566\n","Epoch 15/50\n","13/13 [==============================] - 0s 35ms/step - loss: 0.0551 - val_loss: 0.0562\n","Epoch 16/50\n","13/13 [==============================] - 0s 35ms/step - loss: 0.0537 - val_loss: 0.0564\n","Epoch 17/50\n","13/13 [==============================] - 0s 35ms/step - loss: 0.0518 - val_loss: 0.0556\n","Epoch 18/50\n","13/13 [==============================] - 0s 34ms/step - loss: 0.0515 - val_loss: 0.0551\n","Epoch 19/50\n","13/13 [==============================] - 0s 35ms/step - loss: 0.0503 - val_loss: 0.0550\n","Epoch 20/50\n","13/13 [==============================] - 0s 34ms/step - loss: 0.0488 - val_loss: 0.0544\n","Epoch 21/50\n","13/13 [==============================] - 0s 36ms/step - loss: 0.0490 - val_loss: 0.0546\n","Epoch 22/50\n","13/13 [==============================] - 0s 35ms/step - loss: 0.0485 - val_loss: 0.0548\n","Epoch 23/50\n","13/13 [==============================] - 0s 35ms/step - loss: 0.0465 - val_loss: 0.0536\n","Epoch 24/50\n","13/13 [==============================] - 0s 34ms/step - loss: 0.0465 - val_loss: 0.0542\n","Epoch 25/50\n","13/13 [==============================] - 0s 34ms/step - loss: 0.0461 - val_loss: 0.0533\n","Epoch 26/50\n","13/13 [==============================] - 0s 35ms/step - loss: 0.0446 - val_loss: 0.0525\n","Epoch 27/50\n","13/13 [==============================] - 0s 35ms/step - loss: 0.0444 - val_loss: 0.0524\n","Epoch 28/50\n","13/13 [==============================] - 0s 35ms/step - loss: 0.0446 - val_loss: 0.0529\n","Epoch 29/50\n","13/13 [==============================] - 0s 35ms/step - loss: 0.0425 - val_loss: 0.0523\n","Epoch 30/50\n","13/13 [==============================] - 0s 35ms/step - loss: 0.0433 - val_loss: 0.0538\n","Epoch 31/50\n","13/13 [==============================] - 0s 35ms/step - loss: 0.0440 - val_loss: 0.0529\n","Epoch 32/50\n","13/13 [==============================] - 0s 37ms/step - loss: 0.0426 - val_loss: 0.0523\n","Epoch 33/50\n","13/13 [==============================] - 0s 35ms/step - loss: 0.0409 - val_loss: 0.0528\n","Epoch 34/50\n","13/13 [==============================] - 0s 35ms/step - loss: 0.0410 - val_loss: 0.0520\n","Epoch 35/50\n","13/13 [==============================] - 0s 34ms/step - loss: 0.0424 - val_loss: 0.0523\n","Epoch 36/50\n","13/13 [==============================] - 0s 36ms/step - loss: 0.0429 - val_loss: 0.0543\n","Epoch 37/50\n","13/13 [==============================] - 0s 35ms/step - loss: 0.0408 - val_loss: 0.0519\n","Epoch 38/50\n","13/13 [==============================] - 0s 34ms/step - loss: 0.0406 - val_loss: 0.0522\n","Epoch 39/50\n","13/13 [==============================] - 0s 36ms/step - loss: 0.0404 - val_loss: 0.0532\n","Epoch 40/50\n","13/13 [==============================] - 0s 35ms/step - loss: 0.0396 - val_loss: 0.0532\n","Epoch 41/50\n","13/13 [==============================] - 0s 36ms/step - loss: 0.0387 - val_loss: 0.0527\n","Epoch 42/50\n","13/13 [==============================] - 0s 34ms/step - loss: 0.0398 - val_loss: 0.0523\n","Epoch 43/50\n","13/13 [==============================] - 0s 35ms/step - loss: 0.0398 - val_loss: 0.0520\n","Epoch 44/50\n","13/13 [==============================] - 0s 35ms/step - loss: 0.0381 - val_loss: 0.0531\n","Epoch 45/50\n","13/13 [==============================] - 0s 34ms/step - loss: 0.0387 - val_loss: 0.0536\n","Epoch 46/50\n","13/13 [==============================] - 0s 35ms/step - loss: 0.0378 - val_loss: 0.0530\n","Epoch 47/50\n","13/13 [==============================] - 0s 34ms/step - loss: 0.0381 - val_loss: 0.0535\n","Epoch 48/50\n","13/13 [==============================] - 0s 34ms/step - loss: 0.0376 - val_loss: 0.0522\n","Epoch 49/50\n","13/13 [==============================] - 0s 34ms/step - loss: 0.0380 - val_loss: 0.0529\n","Epoch 50/50\n","13/13 [==============================] - 0s 35ms/step - loss: 0.0375 - val_loss: 0.0525\n"]}]},{"cell_type":"code","source":["model5 = Sequential()\n","model5.add(Dense(300, input_dim=x_Train.shape[1], activation='relu'))\n","model5.add(BatchNormalization())\n","model5.add(Dropout(0.2))\n","model5.add(Dense(100,  activation='tanh'))\n","model5.add(BatchNormalization())\n","model5.add(Dropout(0.2))\n","model5.add(Dense(1, activation='linear'))\n","\n","model5.compile(loss='mse', optimizer=Adam(0.001))"],"metadata":{"id":"ZIiblHKKveEx"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["history = model5.fit(x_Train, y_Train, batch_size=1024, epochs=50, validation_data=(x_val, y_val), verbose=1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"c-nn2Ctjw5cD","executionInfo":{"status":"ok","timestamp":1656438613832,"user_tz":-180,"elapsed":42133,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"56559426-6f4e-44a8-f408-bde16dc2b15d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/50\n","13/13 [==============================] - 1s 51ms/step - loss: 1.3761 - val_loss: 0.7833\n","Epoch 2/50\n","13/13 [==============================] - 1s 42ms/step - loss: 0.7361 - val_loss: 0.7771\n","Epoch 3/50\n","13/13 [==============================] - 1s 40ms/step - loss: 0.5843 - val_loss: 0.7408\n","Epoch 4/50\n","13/13 [==============================] - 1s 40ms/step - loss: 0.5097 - val_loss: 0.7303\n","Epoch 5/50\n","13/13 [==============================] - 1s 39ms/step - loss: 0.4702 - val_loss: 0.7017\n","Epoch 6/50\n","13/13 [==============================] - 1s 40ms/step - loss: 0.4185 - val_loss: 0.6737\n","Epoch 7/50\n","13/13 [==============================] - 1s 39ms/step - loss: 0.3704 - val_loss: 0.6429\n","Epoch 8/50\n","13/13 [==============================] - 1s 41ms/step - loss: 0.3371 - val_loss: 0.6225\n","Epoch 9/50\n","13/13 [==============================] - 1s 39ms/step - loss: 0.3148 - val_loss: 0.5962\n","Epoch 10/50\n","13/13 [==============================] - 1s 40ms/step - loss: 0.2913 - val_loss: 0.5731\n","Epoch 11/50\n","13/13 [==============================] - 1s 40ms/step - loss: 0.2635 - val_loss: 0.5641\n","Epoch 12/50\n","13/13 [==============================] - 1s 40ms/step - loss: 0.2437 - val_loss: 0.5458\n","Epoch 13/50\n","13/13 [==============================] - 1s 39ms/step - loss: 0.2206 - val_loss: 0.5129\n","Epoch 14/50\n","13/13 [==============================] - 1s 40ms/step - loss: 0.2041 - val_loss: 0.4887\n","Epoch 15/50\n","13/13 [==============================] - 1s 40ms/step - loss: 0.1883 - val_loss: 0.4647\n","Epoch 16/50\n","13/13 [==============================] - 1s 40ms/step - loss: 0.1751 - val_loss: 0.4384\n","Epoch 17/50\n","13/13 [==============================] - 1s 39ms/step - loss: 0.1641 - val_loss: 0.4218\n","Epoch 18/50\n","13/13 [==============================] - 1s 40ms/step - loss: 0.1529 - val_loss: 0.3991\n","Epoch 19/50\n","13/13 [==============================] - 1s 39ms/step - loss: 0.1457 - val_loss: 0.3665\n","Epoch 20/50\n","13/13 [==============================] - 1s 40ms/step - loss: 0.1363 - val_loss: 0.3518\n","Epoch 21/50\n","13/13 [==============================] - 1s 39ms/step - loss: 0.1314 - val_loss: 0.3467\n","Epoch 22/50\n","13/13 [==============================] - 1s 42ms/step - loss: 0.1239 - val_loss: 0.3158\n","Epoch 23/50\n","13/13 [==============================] - 1s 39ms/step - loss: 0.1169 - val_loss: 0.3007\n","Epoch 24/50\n","13/13 [==============================] - 1s 40ms/step - loss: 0.1142 - val_loss: 0.2702\n","Epoch 25/50\n","13/13 [==============================] - 1s 40ms/step - loss: 0.1075 - val_loss: 0.2520\n","Epoch 26/50\n","13/13 [==============================] - 1s 41ms/step - loss: 0.1069 - val_loss: 0.2324\n","Epoch 27/50\n","13/13 [==============================] - 1s 40ms/step - loss: 0.1021 - val_loss: 0.2377\n","Epoch 28/50\n","13/13 [==============================] - 1s 41ms/step - loss: 0.0991 - val_loss: 0.2115\n","Epoch 29/50\n","13/13 [==============================] - 1s 39ms/step - loss: 0.0940 - val_loss: 0.1794\n","Epoch 30/50\n","13/13 [==============================] - 1s 41ms/step - loss: 0.0923 - val_loss: 0.1669\n","Epoch 31/50\n","13/13 [==============================] - 1s 40ms/step - loss: 0.0899 - val_loss: 0.1659\n","Epoch 32/50\n","13/13 [==============================] - 1s 42ms/step - loss: 0.0890 - val_loss: 0.1563\n","Epoch 33/50\n","13/13 [==============================] - 1s 39ms/step - loss: 0.0877 - val_loss: 0.1569\n","Epoch 34/50\n","13/13 [==============================] - 1s 41ms/step - loss: 0.0840 - val_loss: 0.1456\n","Epoch 35/50\n","13/13 [==============================] - 1s 39ms/step - loss: 0.0829 - val_loss: 0.1315\n","Epoch 36/50\n","13/13 [==============================] - 1s 40ms/step - loss: 0.0802 - val_loss: 0.1214\n","Epoch 37/50\n","13/13 [==============================] - 1s 39ms/step - loss: 0.0808 - val_loss: 0.1118\n","Epoch 38/50\n","13/13 [==============================] - 1s 40ms/step - loss: 0.0774 - val_loss: 0.1141\n","Epoch 39/50\n","13/13 [==============================] - 1s 39ms/step - loss: 0.0766 - val_loss: 0.1007\n","Epoch 40/50\n","13/13 [==============================] - 1s 40ms/step - loss: 0.0734 - val_loss: 0.0968\n","Epoch 41/50\n","13/13 [==============================] - 1s 40ms/step - loss: 0.0748 - val_loss: 0.0981\n","Epoch 42/50\n","13/13 [==============================] - 1s 41ms/step - loss: 0.0726 - val_loss: 0.0910\n","Epoch 43/50\n","13/13 [==============================] - 1s 39ms/step - loss: 0.0711 - val_loss: 0.0913\n","Epoch 44/50\n","13/13 [==============================] - 1s 40ms/step - loss: 0.0710 - val_loss: 0.0891\n","Epoch 45/50\n","13/13 [==============================] - 1s 41ms/step - loss: 0.0710 - val_loss: 0.0838\n","Epoch 46/50\n","13/13 [==============================] - 1s 39ms/step - loss: 0.0711 - val_loss: 0.0853\n","Epoch 47/50\n","13/13 [==============================] - 1s 41ms/step - loss: 0.0693 - val_loss: 0.0847\n","Epoch 48/50\n","13/13 [==============================] - 1s 39ms/step - loss: 0.0654 - val_loss: 0.0873\n","Epoch 49/50\n","13/13 [==============================] - 1s 42ms/step - loss: 0.0668 - val_loss: 0.0862\n","Epoch 50/50\n","13/13 [==============================] - 1s 40ms/step - loss: 0.0656 - val_loss: 0.0847\n"]}]},{"cell_type":"code","source":["model5.compile(loss='mse', optimizer=Adam(0.0001))\n","history = model5.fit(x_Train, y_Train, batch_size=1024, epochs=50, validation_data=(x_val, y_val), verbose=1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6tTh22Zjx0En","executionInfo":{"status":"ok","timestamp":1656438640823,"user_tz":-180,"elapsed":27001,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"78aaa768-bb6b-41fd-89af-1a25df9fa52e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/50\n","13/13 [==============================] - 1s 52ms/step - loss: 0.0650 - val_loss: 0.0798\n","Epoch 2/50\n","13/13 [==============================] - 1s 41ms/step - loss: 0.0649 - val_loss: 0.0763\n","Epoch 3/50\n","13/13 [==============================] - 1s 41ms/step - loss: 0.0651 - val_loss: 0.0745\n","Epoch 4/50\n","13/13 [==============================] - 1s 41ms/step - loss: 0.0650 - val_loss: 0.0729\n","Epoch 5/50\n","13/13 [==============================] - 1s 40ms/step - loss: 0.0645 - val_loss: 0.0711\n","Epoch 6/50\n","13/13 [==============================] - 1s 41ms/step - loss: 0.0644 - val_loss: 0.0698\n","Epoch 7/50\n","13/13 [==============================] - 1s 40ms/step - loss: 0.0635 - val_loss: 0.0691\n","Epoch 8/50\n","13/13 [==============================] - 1s 42ms/step - loss: 0.0626 - val_loss: 0.0683\n","Epoch 9/50\n","13/13 [==============================] - 1s 41ms/step - loss: 0.0632 - val_loss: 0.0679\n","Epoch 10/50\n","13/13 [==============================] - 1s 41ms/step - loss: 0.0629 - val_loss: 0.0675\n","Epoch 11/50\n","13/13 [==============================] - 1s 40ms/step - loss: 0.0611 - val_loss: 0.0676\n","Epoch 12/50\n","13/13 [==============================] - 1s 41ms/step - loss: 0.0622 - val_loss: 0.0675\n","Epoch 13/50\n","13/13 [==============================] - 1s 39ms/step - loss: 0.0631 - val_loss: 0.0674\n","Epoch 14/50\n","13/13 [==============================] - 1s 40ms/step - loss: 0.0621 - val_loss: 0.0672\n","Epoch 15/50\n","13/13 [==============================] - 1s 41ms/step - loss: 0.0622 - val_loss: 0.0668\n","Epoch 16/50\n","13/13 [==============================] - 1s 40ms/step - loss: 0.0629 - val_loss: 0.0667\n","Epoch 17/50\n","13/13 [==============================] - 1s 40ms/step - loss: 0.0609 - val_loss: 0.0664\n","Epoch 18/50\n","13/13 [==============================] - 1s 40ms/step - loss: 0.0604 - val_loss: 0.0672\n","Epoch 19/50\n","13/13 [==============================] - 1s 40ms/step - loss: 0.0604 - val_loss: 0.0669\n","Epoch 20/50\n","13/13 [==============================] - 1s 42ms/step - loss: 0.0610 - val_loss: 0.0666\n","Epoch 21/50\n","13/13 [==============================] - 1s 39ms/step - loss: 0.0609 - val_loss: 0.0665\n","Epoch 22/50\n","13/13 [==============================] - 1s 43ms/step - loss: 0.0586 - val_loss: 0.0668\n","Epoch 23/50\n","13/13 [==============================] - 1s 39ms/step - loss: 0.0586 - val_loss: 0.0665\n","Epoch 24/50\n","13/13 [==============================] - 1s 41ms/step - loss: 0.0600 - val_loss: 0.0662\n","Epoch 25/50\n","13/13 [==============================] - 1s 39ms/step - loss: 0.0591 - val_loss: 0.0669\n","Epoch 26/50\n","13/13 [==============================] - 1s 40ms/step - loss: 0.0583 - val_loss: 0.0665\n","Epoch 27/50\n","13/13 [==============================] - 1s 39ms/step - loss: 0.0603 - val_loss: 0.0669\n","Epoch 28/50\n","13/13 [==============================] - 1s 41ms/step - loss: 0.0591 - val_loss: 0.0660\n","Epoch 29/50\n","13/13 [==============================] - 1s 39ms/step - loss: 0.0585 - val_loss: 0.0673\n","Epoch 30/50\n","13/13 [==============================] - 1s 41ms/step - loss: 0.0584 - val_loss: 0.0668\n","Epoch 31/50\n","13/13 [==============================] - 1s 39ms/step - loss: 0.0585 - val_loss: 0.0674\n","Epoch 32/50\n","13/13 [==============================] - 1s 40ms/step - loss: 0.0590 - val_loss: 0.0666\n","Epoch 33/50\n","13/13 [==============================] - 1s 39ms/step - loss: 0.0584 - val_loss: 0.0669\n","Epoch 34/50\n","13/13 [==============================] - 1s 41ms/step - loss: 0.0568 - val_loss: 0.0669\n","Epoch 35/50\n","13/13 [==============================] - 1s 40ms/step - loss: 0.0580 - val_loss: 0.0674\n","Epoch 36/50\n","13/13 [==============================] - 1s 39ms/step - loss: 0.0582 - val_loss: 0.0667\n","Epoch 37/50\n","13/13 [==============================] - 1s 40ms/step - loss: 0.0572 - val_loss: 0.0663\n","Epoch 38/50\n","13/13 [==============================] - 1s 40ms/step - loss: 0.0576 - val_loss: 0.0674\n","Epoch 39/50\n","13/13 [==============================] - 1s 39ms/step - loss: 0.0582 - val_loss: 0.0667\n","Epoch 40/50\n","13/13 [==============================] - 1s 40ms/step - loss: 0.0586 - val_loss: 0.0674\n","Epoch 41/50\n","13/13 [==============================] - 1s 41ms/step - loss: 0.0571 - val_loss: 0.0661\n","Epoch 42/50\n","13/13 [==============================] - 1s 42ms/step - loss: 0.0562 - val_loss: 0.0676\n","Epoch 43/50\n","13/13 [==============================] - 1s 41ms/step - loss: 0.0573 - val_loss: 0.0663\n","Epoch 44/50\n","13/13 [==============================] - 1s 40ms/step - loss: 0.0567 - val_loss: 0.0669\n","Epoch 45/50\n","13/13 [==============================] - 1s 41ms/step - loss: 0.0569 - val_loss: 0.0679\n","Epoch 46/50\n","13/13 [==============================] - 1s 39ms/step - loss: 0.0553 - val_loss: 0.0671\n","Epoch 47/50\n","13/13 [==============================] - 1s 41ms/step - loss: 0.0557 - val_loss: 0.0664\n","Epoch 48/50\n","13/13 [==============================] - 1s 39ms/step - loss: 0.0555 - val_loss: 0.0665\n","Epoch 49/50\n","13/13 [==============================] - 1s 40ms/step - loss: 0.0559 - val_loss: 0.0667\n","Epoch 50/50\n","13/13 [==============================] - 1s 39ms/step - loss: 0.0557 - val_loss: 0.0686\n"]}]},{"cell_type":"markdown","source":["Добавление BatchNormalization не увеличило точность модели"],"metadata":{"id":"94Hvv29yzOnd"}},{"cell_type":"code","source":["model6 = Sequential()\n","model6.add(Dense(400, input_dim=x_Train.shape[1], activation='relu'))\n","model6.add(Dropout(0.2))\n","model6.add(Dense(200,  activation='tanh'))\n","model6.add(Dropout(0.2))\n","model6.add(Dense(1, activation='linear'))\n","\n","model6.compile(loss='mse', optimizer=Adam(0.001))"],"metadata":{"id":"YLflGAH0zfFl","executionInfo":{"status":"ok","timestamp":1656666649525,"user_tz":-180,"elapsed":305,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}}},"execution_count":37,"outputs":[]},{"cell_type":"code","source":["plot_model(model6, dpi=80, show_shapes=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":539},"id":"Z8ts8qC1By4V","executionInfo":{"status":"ok","timestamp":1656666718042,"user_tz":-180,"elapsed":418,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"d5367b85-71e5-4e3d-dc0e-f5e044ac33a6"},"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<IPython.core.display.Image object>"],"image/png":"\n"},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["history = model6.fit(x_Train, y_Train, batch_size=1024, epochs=80, validation_data=(x_val, y_val), verbose=1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cy_UaFjWzrtX","executionInfo":{"status":"ok","timestamp":1656438690610,"user_tz":-180,"elapsed":49278,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"0161fb45-d423-4cbd-e1bb-fae7a3c0acbd"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/80\n","13/13 [==============================] - 1s 57ms/step - loss: 0.4526 - val_loss: 0.2149\n","Epoch 2/80\n","13/13 [==============================] - 1s 46ms/step - loss: 0.1831 - val_loss: 0.1290\n","Epoch 3/80\n","13/13 [==============================] - 1s 48ms/step - loss: 0.1251 - val_loss: 0.0976\n","Epoch 4/80\n","13/13 [==============================] - 1s 46ms/step - loss: 0.0981 - val_loss: 0.0826\n","Epoch 5/80\n","13/13 [==============================] - 1s 48ms/step - loss: 0.0844 - val_loss: 0.0733\n","Epoch 6/80\n","13/13 [==============================] - 1s 47ms/step - loss: 0.0775 - val_loss: 0.0691\n","Epoch 7/80\n","13/13 [==============================] - 1s 46ms/step - loss: 0.0686 - val_loss: 0.0648\n","Epoch 8/80\n","13/13 [==============================] - 1s 47ms/step - loss: 0.0654 - val_loss: 0.0621\n","Epoch 9/80\n","13/13 [==============================] - 1s 48ms/step - loss: 0.0623 - val_loss: 0.0596\n","Epoch 10/80\n","13/13 [==============================] - 1s 47ms/step - loss: 0.0604 - val_loss: 0.0602\n","Epoch 11/80\n","13/13 [==============================] - 1s 45ms/step - loss: 0.0589 - val_loss: 0.0585\n","Epoch 12/80\n","13/13 [==============================] - 1s 46ms/step - loss: 0.0557 - val_loss: 0.0574\n","Epoch 13/80\n","13/13 [==============================] - 1s 47ms/step - loss: 0.0533 - val_loss: 0.0567\n","Epoch 14/80\n","13/13 [==============================] - 1s 46ms/step - loss: 0.0528 - val_loss: 0.0569\n","Epoch 15/80\n","13/13 [==============================] - 1s 47ms/step - loss: 0.0510 - val_loss: 0.0549\n","Epoch 16/80\n","13/13 [==============================] - 1s 47ms/step - loss: 0.0497 - val_loss: 0.0542\n","Epoch 17/80\n","13/13 [==============================] - 1s 47ms/step - loss: 0.0485 - val_loss: 0.0553\n","Epoch 18/80\n","13/13 [==============================] - 1s 47ms/step - loss: 0.0478 - val_loss: 0.0531\n","Epoch 19/80\n","13/13 [==============================] - 1s 46ms/step - loss: 0.0460 - val_loss: 0.0532\n","Epoch 20/80\n","13/13 [==============================] - 1s 47ms/step - loss: 0.0450 - val_loss: 0.0522\n","Epoch 21/80\n","13/13 [==============================] - 1s 47ms/step - loss: 0.0438 - val_loss: 0.0523\n","Epoch 22/80\n","13/13 [==============================] - 1s 47ms/step - loss: 0.0436 - val_loss: 0.0527\n","Epoch 23/80\n","13/13 [==============================] - 1s 48ms/step - loss: 0.0442 - val_loss: 0.0519\n","Epoch 24/80\n","13/13 [==============================] - 1s 47ms/step - loss: 0.0429 - val_loss: 0.0540\n","Epoch 25/80\n","13/13 [==============================] - 1s 48ms/step - loss: 0.0412 - val_loss: 0.0520\n","Epoch 26/80\n","13/13 [==============================] - 1s 46ms/step - loss: 0.0411 - val_loss: 0.0528\n","Epoch 27/80\n","13/13 [==============================] - 1s 49ms/step - loss: 0.0411 - val_loss: 0.0525\n","Epoch 28/80\n","13/13 [==============================] - 1s 47ms/step - loss: 0.0404 - val_loss: 0.0525\n","Epoch 29/80\n","13/13 [==============================] - 1s 47ms/step - loss: 0.0414 - val_loss: 0.0510\n","Epoch 30/80\n","13/13 [==============================] - 1s 47ms/step - loss: 0.0410 - val_loss: 0.0527\n","Epoch 31/80\n","13/13 [==============================] - 1s 46ms/step - loss: 0.0418 - val_loss: 0.0522\n","Epoch 32/80\n","13/13 [==============================] - 1s 47ms/step - loss: 0.0380 - val_loss: 0.0530\n","Epoch 33/80\n","13/13 [==============================] - 1s 47ms/step - loss: 0.0394 - val_loss: 0.0536\n","Epoch 34/80\n","13/13 [==============================] - 1s 46ms/step - loss: 0.0389 - val_loss: 0.0543\n","Epoch 35/80\n","13/13 [==============================] - 1s 47ms/step - loss: 0.0386 - val_loss: 0.0536\n","Epoch 36/80\n","13/13 [==============================] - 1s 46ms/step - loss: 0.0383 - val_loss: 0.0545\n","Epoch 37/80\n","13/13 [==============================] - 1s 47ms/step - loss: 0.0370 - val_loss: 0.0535\n","Epoch 38/80\n","13/13 [==============================] - 1s 47ms/step - loss: 0.0367 - val_loss: 0.0529\n","Epoch 39/80\n","13/13 [==============================] - 1s 46ms/step - loss: 0.0368 - val_loss: 0.0529\n","Epoch 40/80\n","13/13 [==============================] - 1s 47ms/step - loss: 0.0371 - val_loss: 0.0543\n","Epoch 41/80\n","13/13 [==============================] - 1s 47ms/step - loss: 0.0366 - val_loss: 0.0514\n","Epoch 42/80\n","13/13 [==============================] - 1s 48ms/step - loss: 0.0356 - val_loss: 0.0521\n","Epoch 43/80\n","13/13 [==============================] - 1s 47ms/step - loss: 0.0366 - val_loss: 0.0519\n","Epoch 44/80\n","13/13 [==============================] - 1s 48ms/step - loss: 0.0355 - val_loss: 0.0551\n","Epoch 45/80\n","13/13 [==============================] - 1s 48ms/step - loss: 0.0355 - val_loss: 0.0518\n","Epoch 46/80\n","13/13 [==============================] - 1s 47ms/step - loss: 0.0353 - val_loss: 0.0525\n","Epoch 47/80\n","13/13 [==============================] - 1s 48ms/step - loss: 0.0357 - val_loss: 0.0522\n","Epoch 48/80\n","13/13 [==============================] - 1s 48ms/step - loss: 0.0347 - val_loss: 0.0516\n","Epoch 49/80\n","13/13 [==============================] - 1s 47ms/step - loss: 0.0346 - val_loss: 0.0527\n","Epoch 50/80\n","13/13 [==============================] - 1s 49ms/step - loss: 0.0349 - val_loss: 0.0522\n","Epoch 51/80\n","13/13 [==============================] - 1s 46ms/step - loss: 0.0335 - val_loss: 0.0523\n","Epoch 52/80\n","13/13 [==============================] - 1s 48ms/step - loss: 0.0350 - val_loss: 0.0526\n","Epoch 53/80\n","13/13 [==============================] - 1s 48ms/step - loss: 0.0343 - val_loss: 0.0525\n","Epoch 54/80\n","13/13 [==============================] - 1s 46ms/step - loss: 0.0347 - val_loss: 0.0530\n","Epoch 55/80\n","13/13 [==============================] - 1s 48ms/step - loss: 0.0338 - val_loss: 0.0532\n","Epoch 56/80\n","13/13 [==============================] - 1s 46ms/step - loss: 0.0342 - val_loss: 0.0532\n","Epoch 57/80\n","13/13 [==============================] - 1s 48ms/step - loss: 0.0342 - val_loss: 0.0522\n","Epoch 58/80\n","13/13 [==============================] - 1s 48ms/step - loss: 0.0329 - val_loss: 0.0522\n","Epoch 59/80\n","13/13 [==============================] - 1s 46ms/step - loss: 0.0327 - val_loss: 0.0518\n","Epoch 60/80\n","13/13 [==============================] - 1s 48ms/step - loss: 0.0330 - val_loss: 0.0530\n","Epoch 61/80\n","13/13 [==============================] - 1s 48ms/step - loss: 0.0324 - val_loss: 0.0531\n","Epoch 62/80\n","13/13 [==============================] - 1s 49ms/step - loss: 0.0318 - val_loss: 0.0520\n","Epoch 63/80\n","13/13 [==============================] - 1s 47ms/step - loss: 0.0322 - val_loss: 0.0517\n","Epoch 64/80\n","13/13 [==============================] - 1s 47ms/step - loss: 0.0328 - val_loss: 0.0517\n","Epoch 65/80\n","13/13 [==============================] - 1s 48ms/step - loss: 0.0323 - val_loss: 0.0529\n","Epoch 66/80\n","13/13 [==============================] - 1s 47ms/step - loss: 0.0328 - val_loss: 0.0523\n","Epoch 67/80\n","13/13 [==============================] - 1s 47ms/step - loss: 0.0319 - val_loss: 0.0531\n","Epoch 68/80\n","13/13 [==============================] - 1s 47ms/step - loss: 0.0324 - val_loss: 0.0520\n","Epoch 69/80\n","13/13 [==============================] - 1s 46ms/step - loss: 0.0320 - val_loss: 0.0532\n","Epoch 70/80\n","13/13 [==============================] - 1s 48ms/step - loss: 0.0324 - val_loss: 0.0526\n","Epoch 71/80\n","13/13 [==============================] - 1s 47ms/step - loss: 0.0311 - val_loss: 0.0527\n","Epoch 72/80\n","13/13 [==============================] - 1s 47ms/step - loss: 0.0312 - val_loss: 0.0528\n","Epoch 73/80\n","13/13 [==============================] - 1s 47ms/step - loss: 0.0322 - val_loss: 0.0528\n","Epoch 74/80\n","13/13 [==============================] - 1s 46ms/step - loss: 0.0331 - val_loss: 0.0535\n","Epoch 75/80\n","13/13 [==============================] - 1s 46ms/step - loss: 0.0312 - val_loss: 0.0525\n","Epoch 76/80\n","13/13 [==============================] - 1s 46ms/step - loss: 0.0323 - val_loss: 0.0535\n","Epoch 77/80\n","13/13 [==============================] - 1s 47ms/step - loss: 0.0312 - val_loss: 0.0541\n","Epoch 78/80\n","13/13 [==============================] - 1s 49ms/step - loss: 0.0308 - val_loss: 0.0533\n","Epoch 79/80\n","13/13 [==============================] - 1s 46ms/step - loss: 0.0323 - val_loss: 0.0539\n","Epoch 80/80\n","13/13 [==============================] - 1s 47ms/step - loss: 0.0312 - val_loss: 0.0534\n"]}]},{"cell_type":"code","source":["plt.plot(history.history['loss'], \n","         label='Ошибка на обучающем наборе')\n","plt.plot(history.history['val_loss'], \n","         label='Ошибка на проверочном наборе')\n","plt.xlabel('Эпоха обучения')\n","plt.ylabel('Ошибка')\n","plt.legend()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":279},"id":"nGru9ZmV0YfC","executionInfo":{"status":"ok","timestamp":1656438691168,"user_tz":-180,"elapsed":563,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"7ef36168-6c84-4a36-e985-efd1ba623b64"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["model6_predict = model6.predict(x_test)\n","predict_model6_inverse = y_scaler.inverse_transform(model6_predict).flatten()\n","yTrainReal = y_scaler.inverse_transform(y_test.reshape(-1,1)).flatten()"],"metadata":{"id":"8HVcWiv33ahk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["MSE(yTrainReal, predict_model6_inverse); R2(yTrainReal, predict_model6_inverse);"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XDUUbX3K4elJ","executionInfo":{"status":"ok","timestamp":1656438691745,"user_tz":-180,"elapsed":11,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"93d0274e-1ffb-4b1a-fac6-05bb7b0b58fe"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["MSE: 11142027396.062\n","R2: 0.938\n"]}]},{"cell_type":"code","source":["estimation_model(yTrainReal,predict_model6_inverse)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0BmS4etk3s1t","executionInfo":{"status":"ok","timestamp":1656438691746,"user_tz":-180,"elapsed":11,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"217dabe3-8450-489e-8c62-f4f0d2da7cce"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Средняя ошибка:  61752 руб.\n","Средняя цена:  473683 руб.\n","Процент ошибки: 13%\n","Процент точности: 87%\n"]}]},{"cell_type":"markdown","source":["# Попробуем применить модель для обучения API. При этом необходимо по-другому создать наши выборки.  "],"metadata":{"id":"DWf-YypR4xes"}},{"cell_type":"code","source":["# Загружаем ранее отредактированную базу\n","df = pd.read_csv('/content/drive/MyDrive/диплом/Avto.csv')"],"metadata":{"id":"iXS5s_Hl4wpV","executionInfo":{"status":"ok","timestamp":1656669263208,"user_tz":-180,"elapsed":314,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}}},"execution_count":40,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"rxu6UbTpum4I","executionInfo":{"status":"ok","timestamp":1656438691747,"user_tz":-180,"elapsed":9,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"940e8acd-89b8-45d2-8827-7b1165826ba0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  марка модель  мощность     год    пробег  двери        кузов топливо  \\\n","0  Audi     A4       150  2017.0   89000.0    4.0        седан  бензин   \n","1  Audi     Q5       170  2012.0  104000.0    5.0  внедорожник  дизель   \n","2  Audi     Q5       211  2010.0  113043.0    5.0  внедорожник  бензин   \n","3  Audi     A8       174  1996.0  460000.0    4.0        седан  бензин   \n","4  Audi     A6       150  1995.0  325757.0    4.0        седан  бензин   \n","\n","  трансмиссия    привод     цена  \n","0       робот  передний  1490000  \n","1       робот    полный   950000  \n","2       робот    полный   897000  \n","3    механика  передний   200000  \n","4    механика  передний   129000  "],"text/html":["\n","  <div id=\"df-a61ad01d-3279-4849-9186-37748f54cfd0\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>марка</th>\n","      <th>модель</th>\n","      <th>мощность</th>\n","      <th>год</th>\n","      <th>пробег</th>\n","      <th>двери</th>\n","      <th>кузов</th>\n","      <th>топливо</th>\n","      <th>трансмиссия</th>\n","      <th>привод</th>\n","      <th>цена</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Audi</td>\n","      <td>A4</td>\n","      <td>150</td>\n","      <td>2017.0</td>\n","      <td>89000.0</td>\n","      <td>4.0</td>\n","      <td>седан</td>\n","      <td>бензин</td>\n","      <td>робот</td>\n","      <td>передний</td>\n","      <td>1490000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Audi</td>\n","      <td>Q5</td>\n","      <td>170</td>\n","      <td>2012.0</td>\n","      <td>104000.0</td>\n","      <td>5.0</td>\n","      <td>внедорожник</td>\n","      <td>дизель</td>\n","      <td>робот</td>\n","      <td>полный</td>\n","      <td>950000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Audi</td>\n","      <td>Q5</td>\n","      <td>211</td>\n","      <td>2010.0</td>\n","      <td>113043.0</td>\n","      <td>5.0</td>\n","      <td>внедорожник</td>\n","      <td>бензин</td>\n","      <td>робот</td>\n","      <td>полный</td>\n","      <td>897000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Audi</td>\n","      <td>A8</td>\n","      <td>174</td>\n","      <td>1996.0</td>\n","      <td>460000.0</td>\n","      <td>4.0</td>\n","      <td>седан</td>\n","      <td>бензин</td>\n","      <td>механика</td>\n","      <td>передний</td>\n","      <td>200000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Audi</td>\n","      <td>A6</td>\n","      <td>150</td>\n","      <td>1995.0</td>\n","      <td>325757.0</td>\n","      <td>4.0</td>\n","      <td>седан</td>\n","      <td>бензин</td>\n","      <td>механика</td>\n","      <td>передний</td>\n","      <td>129000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a61ad01d-3279-4849-9186-37748f54cfd0')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-a61ad01d-3279-4849-9186-37748f54cfd0 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-a61ad01d-3279-4849-9186-37748f54cfd0');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":75}]},{"cell_type":"code","source":["# Создаём словари по всем текстовым колонкам\n","mark = create_dict(set(df['марка']))\n","model = create_dict(set(df['модель']))\n","bodie = create_dict(set(df['кузов']))\n","fuel = create_dict(set(df['топливо']))\n","transmission = create_dict(set(df['трансмиссия']))\n","privod = create_dict(set(df['привод']))\n","\n","# Запоминаем цены\n","price = np.array(df['цена'], dtype=np.float)\n","\n","# Запоминаем числовые параметры\n","# и нормируем\n","power = preprocessing.scale(df['мощность'])\n","year = preprocessing.scale(df['год'])\n","mileage = preprocessing.scale(df['пробег'])\n","doors = preprocessing.scale(df['двери'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JYGpAAB4uq8i","executionInfo":{"status":"ok","timestamp":1656669266012,"user_tz":-180,"elapsed":295,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"c4db7007-c35c-4075-8550-e204d7cafc5a"},"execution_count":41,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:10: DeprecationWarning: `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n","Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n","  # Remove the CWD from sys.path while we load stuff.\n"]}]},{"cell_type":"code","source":["# Создаём пустую обучающую выборку\n","x_train_model_marka = []\n","x_train_power = []\n","x_train_year_mileage = []\n","x_train_config = []\n","y_train = []\n","\n","# Проходам по всем машинам\n","for id, car in enumerate(np.array(df)):\n","  # В y_train добавляем цену\n","  y_train.append(price[id])\n","  \n","  # \n","  X1 = to_ohe(car[0], mark) + to_ohe(car[1], model) \n","  X2 = to_ohe(car[6], bodie) + to_ohe(car[7], fuel) + to_ohe(car[8], transmission) + to_ohe(car[9], privod) + [doors[id]]\n","  X3 = [power[id]] \n","  X4 = [year[id]] + [mileage[id]] \n","  \n","  # Добавляем текущую строку в свой x_train\n","  x_train_model_marka.append(X1)\n","  x_train_power.append(X3)\n","  x_train_year_mileage.append(X4)\n","  x_train_config.append(X2)\n","\n","# Превращаем лист в numpy.array\n","x_train_model_marka = np.array(x_train_model_marka, dtype=np.float)\n","x_train_power = np.array(x_train_power, dtype=np.float)\n","x_train_year_mileage = np.array(x_train_year_mileage, dtype=np.float)\n","x_train_config = np.array(x_train_config, dtype=np.float)\n","y_train = np.array(y_train, dtype=np.float)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TPo5eVt3uwVr","executionInfo":{"status":"ok","timestamp":1656669269986,"user_tz":-180,"elapsed":1553,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"15bbc776-74e7-4175-a82b-985ac2658e18"},"execution_count":42,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:26: DeprecationWarning: `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n","Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:27: DeprecationWarning: `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n","Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:28: DeprecationWarning: `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n","Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:29: DeprecationWarning: `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n","Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:30: DeprecationWarning: `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.\n","Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations\n"]}]},{"cell_type":"code","source":["print(x_train_model_marka.shape)\n","print(x_train_power.shape)\n","print(x_train_year_mileage.shape)\n","print(x_train_config.shape)\n","print(y_train.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Y5-2Q5nCyrnw","executionInfo":{"status":"ok","timestamp":1656438693065,"user_tz":-180,"elapsed":13,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"2343a93b-3ac0-47f4-a277-0aac9fe0820e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(18473, 592)\n","(18473, 1)\n","(18473, 2)\n","(18473, 23)\n","(18473,)\n"]}]},{"cell_type":"code","source":["# Нормируем цены\n","y_scaler = StandardScaler()\n","y_train_scaled = y_scaler.fit_transform(y_train.reshape(-1,1)).flatten()"],"metadata":{"id":"01nGPGhIy-W1","executionInfo":{"status":"ok","timestamp":1656669278562,"user_tz":-180,"elapsed":368,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}}},"execution_count":43,"outputs":[]},{"cell_type":"code","source":["splitVal = 0.2 #Процент, который выделяем в проверочную выборку\n","valMask = np.random.sample(x_train_model_marka.shape[0]) < splitVal #Создаём маску True-False для создания проверочной выборки"],"metadata":{"id":"Vn0dHgggy_I-","executionInfo":{"status":"ok","timestamp":1656669280911,"user_tz":-180,"elapsed":303,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}}},"execution_count":44,"outputs":[]},{"cell_type":"code","source":["# Размеры обучающих выборок\n","print(x_train_model_marka[~valMask].shape)\n","print(x_train_power[~valMask].shape)\n","print(x_train_year_mileage[~valMask].shape)\n","print(x_train_config[~valMask].shape)\n","print(y_train_scaled[~valMask].shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MyDudVqYArkI","executionInfo":{"status":"ok","timestamp":1656438693066,"user_tz":-180,"elapsed":10,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"e7476e8b-a66a-492b-9f93-c3ea23bd7c2f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(14825, 592)\n","(14825, 1)\n","(14825, 2)\n","(14825, 23)\n","(14825,)\n"]}]},{"cell_type":"code","source":["# Размеры проверочных выборок\n","print(x_train_model_marka[valMask].shape)\n","print(x_train_power[valMask].shape)\n","print(x_train_year_mileage[valMask].shape)\n","print(x_train_config[valMask].shape)\n","print(y_train_scaled[valMask].shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1zENO-Z-BeRG","executionInfo":{"status":"ok","timestamp":1656438693066,"user_tz":-180,"elapsed":8,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"8f63802c-3f0f-4638-cf4c-0d8f4d7f7359"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(3648, 592)\n","(3648, 1)\n","(3648, 2)\n","(3648, 23)\n","(3648,)\n"]}]},{"cell_type":"markdown","source":["Создаем модель нейронки с 4 отдельными входами"],"metadata":{"id":"Ey3mRb1T48mI"}},{"cell_type":"code","source":["input1 = Input((x_train_model_marka.shape[1],))\n","input2 = Input((x_train_power.shape[1],))\n","input3 = Input((x_train_year_mileage.shape[1],))\n","input4 = Input((x_train_config.shape[1],))    \n","\n","x1 = Dense(100, activation=\"relu\")(input1)\n","#x1 = BatchNormalization()(x1)\n","#x1 = Dropout(0.2)(x1)\n","x1 = Dense(50, activation=\"relu\")(x1)\n","\n","x2 = Dense(30, activation=\"relu\")(input2)\n","#x2 = BatchNormalization()(x2)\n","#x2 = Dropout(0.2)(x2)\n","x2 = Dense(50, activation=\"relu\")(x2)\n","\n","x3 = Dense(30, activation=\"relu\")(input3)\n","#x3 = BatchNormalization()(x3)\n","#x3 = Dropout(0.2)(x3)\n","x3 = Dense(50, activation=\"relu\")(x3)\n","\n","x4 = Dense(50, activation=\"relu\")(input4)\n","#x4 = BatchNormalization()(x4)\n","#x4 = Dropout(0.2)(x4)\n","x4 = Dense(50, activation=\"relu\")(x4)\n","\n","x = concatenate([x1, x2, x3, x4])\n","\n","x = Dense(100, activation='relu')(x)\n","x = Dense(10, activation='tanh')(x)\n","x = Dense(1, activation='linear')(x)\n","\n","model_API = Model((input1, input2, input3, input4), x)\n","\n","model_API.compile(loss='mse', optimizer=Adam(0.001))"],"metadata":{"id":"1aCXLvRG4s1m","executionInfo":{"status":"ok","timestamp":1656669285074,"user_tz":-180,"elapsed":381,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}}},"execution_count":45,"outputs":[]},{"cell_type":"code","source":["plot_model(model_API, dpi=60, show_shapes=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":478},"id":"YJhIWRpiESWE","executionInfo":{"status":"ok","timestamp":1656669367993,"user_tz":-180,"elapsed":454,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"4f56b1d9-515e-4adf-c94e-60ec66bf38eb"},"execution_count":48,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<IPython.core.display.Image object>"],"image/png":"\n"},"metadata":{},"execution_count":48}]},{"cell_type":"code","source":["model_API.fit([x_train_model_marka[~valMask], \n","                         x_train_power[~valMask], \n","                         x_train_year_mileage[~valMask], \n","                         x_train_config[~valMask]], \n","                    y_train_scaled[~valMask],\n","                    batch_size=1024, \n","                    epochs=50, \n","                    validation_data=([x_train_model_marka[valMask], \n","                                      x_train_power[valMask], \n","                                      x_train_year_mileage[valMask], \n","                                      x_train_config[valMask]], \n","                    y_train_scaled[valMask]), \n","                    verbose=1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ljDiZ9BiFNh7","executionInfo":{"status":"ok","timestamp":1656506643463,"user_tz":-180,"elapsed":21717,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"501bfc20-845d-4426-b79e-5e22f501859f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/50\n","15/15 [==============================] - 2s 36ms/step - loss: 0.6658 - val_loss: 0.3620\n","Epoch 2/50\n","15/15 [==============================] - 0s 23ms/step - loss: 0.2933 - val_loss: 0.2333\n","Epoch 3/50\n","15/15 [==============================] - 0s 24ms/step - loss: 0.1904 - val_loss: 0.1628\n","Epoch 4/50\n","15/15 [==============================] - 0s 22ms/step - loss: 0.1367 - val_loss: 0.1238\n","Epoch 5/50\n","15/15 [==============================] - 0s 22ms/step - loss: 0.1059 - val_loss: 0.1028\n","Epoch 6/50\n","15/15 [==============================] - 0s 22ms/step - loss: 0.0889 - val_loss: 0.0919\n","Epoch 7/50\n","15/15 [==============================] - 0s 22ms/step - loss: 0.0780 - val_loss: 0.0823\n","Epoch 8/50\n","15/15 [==============================] - 0s 23ms/step - loss: 0.0702 - val_loss: 0.0753\n","Epoch 9/50\n","15/15 [==============================] - 0s 22ms/step - loss: 0.0648 - val_loss: 0.0719\n","Epoch 10/50\n","15/15 [==============================] - 0s 23ms/step - loss: 0.0608 - val_loss: 0.0683\n","Epoch 11/50\n","15/15 [==============================] - 0s 24ms/step - loss: 0.0578 - val_loss: 0.0664\n","Epoch 12/50\n","15/15 [==============================] - 0s 23ms/step - loss: 0.0559 - val_loss: 0.0637\n","Epoch 13/50\n","15/15 [==============================] - 0s 22ms/step - loss: 0.0535 - val_loss: 0.0626\n","Epoch 14/50\n","15/15 [==============================] - 0s 23ms/step - loss: 0.0517 - val_loss: 0.0604\n","Epoch 15/50\n","15/15 [==============================] - 0s 22ms/step - loss: 0.0507 - val_loss: 0.0604\n","Epoch 16/50\n","15/15 [==============================] - 0s 22ms/step - loss: 0.0500 - val_loss: 0.0581\n","Epoch 17/50\n","15/15 [==============================] - 0s 24ms/step - loss: 0.0481 - val_loss: 0.0569\n","Epoch 18/50\n","15/15 [==============================] - 0s 22ms/step - loss: 0.0471 - val_loss: 0.0561\n","Epoch 19/50\n","15/15 [==============================] - 0s 22ms/step - loss: 0.0468 - val_loss: 0.0550\n","Epoch 20/50\n","15/15 [==============================] - 0s 24ms/step - loss: 0.0452 - val_loss: 0.0556\n","Epoch 21/50\n","15/15 [==============================] - 0s 25ms/step - loss: 0.0447 - val_loss: 0.0539\n","Epoch 22/50\n","15/15 [==============================] - 0s 23ms/step - loss: 0.0446 - val_loss: 0.0565\n","Epoch 23/50\n","15/15 [==============================] - 0s 24ms/step - loss: 0.0438 - val_loss: 0.0538\n","Epoch 24/50\n","15/15 [==============================] - 0s 23ms/step - loss: 0.0427 - val_loss: 0.0522\n","Epoch 25/50\n","15/15 [==============================] - 0s 25ms/step - loss: 0.0422 - val_loss: 0.0533\n","Epoch 26/50\n","15/15 [==============================] - 0s 23ms/step - loss: 0.0418 - val_loss: 0.0525\n","Epoch 27/50\n","15/15 [==============================] - 0s 23ms/step - loss: 0.0411 - val_loss: 0.0532\n","Epoch 28/50\n","15/15 [==============================] - 0s 25ms/step - loss: 0.0410 - val_loss: 0.0528\n","Epoch 29/50\n","15/15 [==============================] - 0s 24ms/step - loss: 0.0405 - val_loss: 0.0524\n","Epoch 30/50\n","15/15 [==============================] - 0s 22ms/step - loss: 0.0404 - val_loss: 0.0519\n","Epoch 31/50\n","15/15 [==============================] - 0s 24ms/step - loss: 0.0399 - val_loss: 0.0526\n","Epoch 32/50\n","15/15 [==============================] - 0s 23ms/step - loss: 0.0405 - val_loss: 0.0516\n","Epoch 33/50\n","15/15 [==============================] - 0s 22ms/step - loss: 0.0390 - val_loss: 0.0507\n","Epoch 34/50\n","15/15 [==============================] - 0s 24ms/step - loss: 0.0382 - val_loss: 0.0520\n","Epoch 35/50\n","15/15 [==============================] - 0s 22ms/step - loss: 0.0383 - val_loss: 0.0510\n","Epoch 36/50\n","15/15 [==============================] - 0s 22ms/step - loss: 0.0381 - val_loss: 0.0526\n","Epoch 37/50\n","15/15 [==============================] - 0s 23ms/step - loss: 0.0387 - val_loss: 0.0510\n","Epoch 38/50\n","15/15 [==============================] - 0s 23ms/step - loss: 0.0388 - val_loss: 0.0508\n","Epoch 39/50\n","15/15 [==============================] - 0s 22ms/step - loss: 0.0374 - val_loss: 0.0516\n","Epoch 40/50\n","15/15 [==============================] - 0s 23ms/step - loss: 0.0372 - val_loss: 0.0528\n","Epoch 41/50\n","15/15 [==============================] - 0s 23ms/step - loss: 0.0368 - val_loss: 0.0514\n","Epoch 42/50\n","15/15 [==============================] - 0s 23ms/step - loss: 0.0370 - val_loss: 0.0512\n","Epoch 43/50\n","15/15 [==============================] - 0s 23ms/step - loss: 0.0367 - val_loss: 0.0517\n","Epoch 44/50\n","15/15 [==============================] - 0s 23ms/step - loss: 0.0370 - val_loss: 0.0529\n","Epoch 45/50\n","15/15 [==============================] - 0s 23ms/step - loss: 0.0366 - val_loss: 0.0514\n","Epoch 46/50\n","15/15 [==============================] - 0s 23ms/step - loss: 0.0362 - val_loss: 0.0509\n","Epoch 47/50\n","15/15 [==============================] - 0s 23ms/step - loss: 0.0352 - val_loss: 0.0501\n","Epoch 48/50\n","15/15 [==============================] - 0s 23ms/step - loss: 0.0349 - val_loss: 0.0506\n","Epoch 49/50\n","15/15 [==============================] - 0s 25ms/step - loss: 0.0351 - val_loss: 0.0509\n","Epoch 50/50\n","15/15 [==============================] - 0s 22ms/step - loss: 0.0346 - val_loss: 0.0511\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7fce533f0890>"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["model_API_predict = model_API.predict([x_train_model_marka[valMask], x_train_power[valMask], x_train_year_mileage[valMask], x_train_config[valMask]])\n","model_API_predict_inverse = y_scaler.inverse_transform(model_API_predict).flatten()\n","yTrainReal = y_scaler.inverse_transform(y_train_scaled[valMask].reshape(-1,1)).flatten()"],"metadata":{"id":"-F-7wKzM9D-v"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["MSE(yTrainReal, model_API_predict_inverse); R2(yTrainReal, model_API_predict_inverse);"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nmTD-USy-YLg","executionInfo":{"status":"ok","timestamp":1656506689898,"user_tz":-180,"elapsed":264,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"44401e73-0cef-4a55-972e-74dd0c23eebc"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["MSE: 9046291122.191\n","R2: 0.950\n"]}]},{"cell_type":"code","source":["estimation_model(yTrainReal,model_API_predict_inverse)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3F17HVoA-ffs","executionInfo":{"status":"ok","timestamp":1656506692212,"user_tz":-180,"elapsed":273,"user":{"displayName":"Дмитрий Небольсин","userId":"16087910873353651075"}},"outputId":"5a2fb364-f25e-45f1-c2de-b71bf98db8d2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Средняя ошибка:  55686 руб.\n","Средняя цена:  469107 руб.\n","Процент ошибки: 12%\n","Процент точности: 88%\n"]}]},{"cell_type":"markdown","source":["Вывод: проведя ряд экспирементов с изменением количества слоев, числом нейронов, добавляя BatchNormalization, Dropout, меняя активационные функции, количество эпох, шаг обучения, batch_size - не удалось достичь точности в 90%. На мой взгляд необходимо дополнять Data Frame, сделать его более сбаланcированным, исключить перевес в количестве одних моделей автомобиля над другими. К примеру цену Форд Фокуса модель НС будет лучше предугадывать чем цену Астон Мартина, Форд - массовый автомобиль."],"metadata":{"id":"zkuTMRBXbKJL"}}]}